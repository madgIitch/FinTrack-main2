{"mappings":"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","sources":["<anon>","js/register.js"],"sourcesContent":["import \"./FinTrack-main.401b9eb7.js\";\n\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $gEjZb = parcelRequire(\"gEjZb\");\n\nvar $6AR8M = parcelRequire(\"6AR8M\");\n\nvar $ilpIi = parcelRequire(\"ilpIi\");\ndocument.addEventListener('DOMContentLoaded', ()=>{\n    const form = document.getElementById('register-form');\n    const steps = Array.from(document.querySelectorAll('.step'));\n    const nextStepButtons = document.querySelectorAll('.next-step');\n    const emailInput = document.getElementById('email');\n    const passwordInput = document.getElementById('password');\n    const confirmPasswordInput = document.getElementById('confirm-password');\n    const visibilityIcons = document.querySelectorAll('.visibility-icon');\n    const emailExistsAlert = document.getElementById('email-exists-alert');\n    let currentStep = 0;\n    let emailForVerification = '';\n    const progressBar = document.getElementById('progress-bar');\n    function updateProgress(stepIndex) {\n        const totalSteps = steps.length;\n        const progress = (stepIndex + 1) / totalSteps * 100;\n        progressBar.style.width = `${progress}%`;\n    }\n    updateProgress(0);\n    function showStep(stepIndex) {\n        steps.forEach((step, index)=>{\n            step.classList.remove('active');\n            if (index === stepIndex) step.classList.add('active');\n        });\n        currentStep = stepIndex;\n        updateProgress(stepIndex);\n    }\n    nextStepButtons.forEach((button)=>{\n        button.addEventListener('click', ()=>{\n            const nextStepId = button.dataset.next;\n            if (nextStepId) showStep(steps.findIndex((step)=>step.id === nextStepId));\n        });\n    });\n    document.getElementById('check-email').addEventListener('click', async ()=>{\n        const email = emailInput.value;\n        emailForVerification = email;\n        try {\n            const methods = await (0, $6AR8M.fetchSignInMethodsForEmail)((0, $gEjZb.auth), email);\n            if (methods.length > 0) emailExistsAlert.style.display = 'block';\n            else {\n                emailExistsAlert.style.display = 'none';\n                console.log(\"Correo disponible.\");\n                showStep(2); // Ir al paso de contraseña\n            }\n        } catch (error) {\n            console.error(\"Error al verificar el correo:\", error);\n            alert(\"Error al verificar el correo. Int\\xe9ntalo de nuevo.\");\n        }\n    });\n    visibilityIcons.forEach((icon)=>{\n        icon.addEventListener('click', ()=>{\n            const input = icon.previousElementSibling;\n            input.type = input.type === 'password' ? 'text' : 'password';\n            icon.textContent = input.type === 'password' ? 'visibility' : 'visibility_off';\n        });\n    });\n    form.addEventListener('submit', async (event)=>{\n        event.preventDefault();\n        const nombre = document.getElementById('nombre').value;\n        const apellidos = document.getElementById('apellidos').value;\n        const password = passwordInput.value;\n        const confirmPassword = confirmPasswordInput.value;\n        if (password !== confirmPassword) {\n            alert(\"Las contrase\\xf1as no coinciden.\");\n            return;\n        }\n        try {\n            console.log(\"Enviando correo de verificaci\\xf3n...\");\n            // Intentar crear el usuario primero para que auth.currentUser esté disponible\n            const userCredential = await (0, $6AR8M.createUserWithEmailAndPassword)((0, $gEjZb.auth), emailForVerification, password);\n            const user = userCredential.user;\n            console.log(\"Usuario creado, enviando correo de verificaci\\xf3n...\");\n            await (0, $6AR8M.sendEmailVerification)(user);\n            console.log(\"Correo de verificaci\\xf3n enviado.\");\n            const userData = {\n                email: emailForVerification,\n                firstName: nombre,\n                lastName: apellidos\n            };\n            const docRef = (0, $ilpIi.doc)((0, $gEjZb.db), \"users\", user.uid);\n            await (0, $ilpIi.setDoc)(docRef, userData);\n            alert(\"Registro completado. Por favor, verifica tu correo electr\\xf3nico.\");\n            window.location.href = \"../index.html\";\n        } catch (error) {\n            console.error(\"Error durante el registro:\", error);\n            let errorMessage = \"Error durante el registro. Int\\xe9ntalo de nuevo.\";\n            if (error.code === 'auth/email-already-in-use') errorMessage = \"Este correo electr\\xf3nico ya est\\xe1 en uso.\";\n            else if (error.code === 'auth/weak-password') errorMessage = \"La contrase\\xf1a debe tener al menos 6 caracteres.\";\n            else if (error.code === 'auth/network-request-failed') errorMessage = \"Error de red. Por favor, int\\xe9ntalo de nuevo.\";\n            else errorMessage = error.message; // Mostrar el mensaje de error completo para depuración\n            alert(errorMessage);\n        }\n    });\n});\n\n\n//# sourceMappingURL=register.c463e2d7.js.map\n","import { app, auth, db } from './firebase.js';\nimport { createUserWithEmailAndPassword, sendEmailVerification, fetchSignInMethodsForEmail } from \"firebase/auth\";\nimport { setDoc, doc } from \"firebase/firestore\";\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    const form = document.getElementById('register-form');\n    const steps = Array.from(document.querySelectorAll('.step'));\n    const nextStepButtons = document.querySelectorAll('.next-step');\n    const emailInput = document.getElementById('email');\n    const passwordInput = document.getElementById('password');\n    const confirmPasswordInput = document.getElementById('confirm-password');\n    const visibilityIcons = document.querySelectorAll('.visibility-icon');\n    const emailExistsAlert = document.getElementById('email-exists-alert');\n    let currentStep = 0;\n    let emailForVerification = '';\n    const progressBar = document.getElementById('progress-bar');\n    function updateProgress(stepIndex) {\n        const totalSteps = steps.length;\n        const progress = ((stepIndex + 1) / totalSteps) * 100;\n        progressBar.style.width = `${progress}%`;\n    }\n    updateProgress(0);\n\n\n\n    function showStep(stepIndex) {\n        steps.forEach((step, index) => {\n            step.classList.remove('active');\n            if (index === stepIndex) {\n                step.classList.add('active');\n            }\n        });\n        currentStep = stepIndex;\n        updateProgress(stepIndex);\n\n    }\n\n    nextStepButtons.forEach(button => {\n        button.addEventListener('click', () => {\n            const nextStepId = button.dataset.next;\n            if (nextStepId) {\n                showStep(steps.findIndex(step => step.id === nextStepId));\n            }\n        });\n    });\n\n    document.getElementById('check-email').addEventListener('click', async () => {\n        const email = emailInput.value;\n        emailForVerification = email;\n        try {\n            const methods = await fetchSignInMethodsForEmail(auth, email);\n            if (methods.length > 0) {\n                emailExistsAlert.style.display = 'block';\n            } else {\n                emailExistsAlert.style.display = 'none';\n                console.log(\"Correo disponible.\");\n                showStep(2); // Ir al paso de contraseña\n            }\n        } catch (error) {\n            console.error(\"Error al verificar el correo:\", error);\n            alert(\"Error al verificar el correo. Inténtalo de nuevo.\");\n        }\n    });\n\n    visibilityIcons.forEach(icon => {\n        icon.addEventListener('click', () => {\n            const input = icon.previousElementSibling;\n            input.type = input.type === 'password' ? 'text' : 'password';\n            icon.textContent = input.type === 'password' ? 'visibility' : 'visibility_off';\n        });\n    });\n\n    form.addEventListener('submit', async (event) => {\n        event.preventDefault();\n\n        const nombre = document.getElementById('nombre').value;\n        const apellidos = document.getElementById('apellidos').value;\n        const password = passwordInput.value;\n        const confirmPassword = confirmPasswordInput.value;\n\n        if (password !== confirmPassword) {\n            alert('Las contraseñas no coinciden.');\n            return;\n        }\n\n        try {\n            console.log(\"Enviando correo de verificación...\");\n            // Intentar crear el usuario primero para que auth.currentUser esté disponible\n            const userCredential = await createUserWithEmailAndPassword(auth, emailForVerification, password);\n            const user = userCredential.user;\n            console.log(\"Usuario creado, enviando correo de verificación...\");\n            await sendEmailVerification(user);\n            console.log(\"Correo de verificación enviado.\");\n\n            const userData = {\n                email: emailForVerification,\n                firstName: nombre,\n                lastName: apellidos\n            };\n\n            const docRef = doc(db, \"users\", user.uid);\n            await setDoc(docRef, userData);\n\n            alert('Registro completado. Por favor, verifica tu correo electrónico.');\n            window.location.href = \"../index.html\";\n\n        } catch (error) {\n            console.error(\"Error durante el registro:\", error);\n            let errorMessage = 'Error durante el registro. Inténtalo de nuevo.';\n            if (error.code === 'auth/email-already-in-use') {\n                errorMessage = 'Este correo electrónico ya está en uso.';\n            } else if (error.code === 'auth/weak-password') {\n                errorMessage = 'La contraseña debe tener al menos 6 caracteres.';\n            } else if (error.code === 'auth/network-request-failed') {\n                errorMessage = 'Error de red. Por favor, inténtalo de nuevo.';\n            } else {\n                errorMessage = error.message; // Mostrar el mensaje de error completo para depuración\n            }\n            alert(errorMessage);\n        }\n    });\n});"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$gEjZb","$6AR8M","$ilpIi","document","addEventListener","form","getElementById","steps","Array","from","querySelectorAll","nextStepButtons","emailInput","passwordInput","confirmPasswordInput","visibilityIcons","emailExistsAlert","emailForVerification","progressBar","updateProgress","stepIndex","totalSteps","length","style","width","showStep","forEach","step","index","classList","remove","add","button","nextStepId","dataset","next","findIndex","email","value","methods","fetchSignInMethodsForEmail","auth","display","console","log","error","alert","icon","input","previousElementSibling","type","textContent","event","preventDefault","nombre","apellidos","password","user","userCredential","createUserWithEmailAndPassword","sendEmailVerification","userData","firstName","lastName","docRef","doc","db","uid","setDoc","window","location","href","errorMessage","message"],"version":3,"file":"register.c463e2d7.js.map"}