{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-c0ebb90e341f649f.js","node_modules/firebase/messaging/dist/esm/index.esm.js","node_modules/@firebase/messaging/dist/esm/index.esm2017.js","node_modules/@firebase/messaging/src/util/constants.ts","node_modules/@firebase/messaging/src/interfaces/internal-message-payload.ts","node_modules/@firebase/messaging/src/helpers/array-base64-translator.ts","node_modules/@firebase/messaging/src/helpers/migrate-old-database.ts","node_modules/@firebase/messaging/src/internals/idb-manager.ts","node_modules/@firebase/messaging/src/util/errors.ts","node_modules/@firebase/messaging/src/internals/requests.ts","node_modules/@firebase/messaging/src/internals/token-manager.ts","node_modules/@firebase/messaging/src/helpers/externalizePayload.ts","node_modules/@firebase/messaging/src/helpers/is-console-message.ts","node_modules/@firebase/messaging/src/helpers/logToFirelog.ts","node_modules/@firebase/messaging/src/helpers/extract-app-config.ts","node_modules/@firebase/messaging/src/messaging-service.ts","node_modules/@firebase/messaging/src/helpers/registerDefaultSw.ts","node_modules/@firebase/messaging/src/helpers/updateSwReg.ts","node_modules/@firebase/messaging/src/helpers/updateVapidKey.ts","node_modules/@firebase/messaging/src/api/getToken.ts","node_modules/@firebase/messaging/src/helpers/logToScion.ts","node_modules/@firebase/messaging/src/listeners/window-listener.ts","node_modules/@firebase/messaging/src/helpers/register.ts","node_modules/@firebase/messaging/src/api/isSupported.ts","node_modules/@firebase/messaging/src/api/deleteToken.ts","node_modules/@firebase/messaging/src/api/onMessage.ts","node_modules/@firebase/messaging/src/api.ts","node_modules/@firebase/messaging/src/index.ts","node_modules/@firebase/installations/dist/esm/index.esm2017.js","node_modules/@firebase/installations/src/util/constants.ts","node_modules/@firebase/installations/src/util/errors.ts","node_modules/@firebase/installations/src/functions/common.ts","node_modules/@firebase/installations/src/functions/create-installation-request.ts","node_modules/@firebase/installations/src/util/sleep.ts","node_modules/@firebase/installations/src/helpers/buffer-to-base64-url-safe.ts","node_modules/@firebase/installations/src/helpers/generate-fid.ts","node_modules/@firebase/installations/src/util/get-key.ts","node_modules/@firebase/installations/src/helpers/fid-changed.ts","node_modules/@firebase/installations/src/helpers/idb-manager.ts","node_modules/@firebase/installations/src/helpers/get-installation-entry.ts","node_modules/@firebase/installations/src/functions/generate-auth-token-request.ts","node_modules/@firebase/installations/src/helpers/refresh-auth-token.ts","node_modules/@firebase/installations/src/api/get-id.ts","node_modules/@firebase/installations/src/api/get-token.ts","node_modules/@firebase/installations/src/functions/delete-installation-request.ts","node_modules/@firebase/installations/src/api/delete-installations.ts","node_modules/@firebase/installations/src/api/on-id-change.ts","node_modules/@firebase/installations/src/api/get-installations.ts","node_modules/@firebase/installations/src/helpers/extract-app-config.ts","node_modules/@firebase/installations/src/functions/config.ts","node_modules/@firebase/installations/src/index.ts","node_modules/@firebase/installations/node_modules/idb/build/index.js","node_modules/@firebase/installations/node_modules/idb/build/wrap-idb-value.js","node_modules/@firebase/messaging/node_modules/idb/build/index.js","node_modules/@firebase/messaging/node_modules/idb/build/wrap-idb-value.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SERVER_PORT = 8080;var HMR_SECURE = false;var HMR_ENV_HASH = \"439701173a9199ea\";var HMR_USE_SSE = false;module.bundle.HMR_BUNDLE_ID = \"db1d35828eedcd47\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_SERVER_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_SERVER_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var HMR_USE_SSE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */,\n  disposedAssets /*: {|[string]: boolean|} */,\n  assetsToDispose /*: Array<[ParcelRequire, string]> */,\n  assetsToAccept /*: Array<[ParcelRequire, string]> */,\n  bundleNotFound = false;\nfunction getHostname() {\n  return HMR_HOST || (typeof location !== 'undefined' && location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || (typeof location !== 'undefined' ? location.port : HMR_SERVER_PORT);\n}\n\n// eslint-disable-next-line no-redeclare\nlet WebSocket = globalThis.WebSocket;\nif (!WebSocket && typeof module.bundle.root === 'function') {\n  try {\n    // eslint-disable-next-line no-global-assign\n    WebSocket = module.bundle.root('ws');\n  } catch {\n    // ignore.\n  }\n}\nvar hostname = getHostname();\nvar port = getPort();\nvar protocol = HMR_SECURE || typeof location !== 'undefined' && location.protocol === 'https:' && !['localhost', '127.0.0.1', '0.0.0.0'].includes(hostname) ? 'wss' : 'ws';\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif (!parent || !parent.isParcelRequire) {\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n  var ws;\n  if (HMR_USE_SSE) {\n    ws = new EventSource('/__parcel_hmr');\n  } else {\n    try {\n      // If we're running in the dev server's node runner, listen for messages on the parent port.\n      let {\n        workerData,\n        parentPort\n      } = module.bundle.root('node:worker_threads') /*: any*/;\n      if (workerData !== null && workerData !== void 0 && workerData.__parcel) {\n        parentPort.on('message', async message => {\n          try {\n            await handleMessage(message);\n            parentPort.postMessage('updated');\n          } catch {\n            parentPort.postMessage('restart');\n          }\n        });\n\n        // After the bundle has finished running, notify the dev server that the HMR update is complete.\n        queueMicrotask(() => parentPort.postMessage('ready'));\n      }\n    } catch {\n      if (typeof WebSocket !== 'undefined') {\n        try {\n          ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n        } catch (err) {\n          if (err.message) {\n            console.error(err.message);\n          }\n        }\n      }\n    }\n  }\n  if (ws) {\n    // $FlowFixMe\n    ws.onmessage = async function (event /*: {data: string, ...} */) {\n      var data /*: HMRMessage */ = JSON.parse(event.data);\n      await handleMessage(data);\n    };\n    if (ws instanceof WebSocket) {\n      ws.onerror = function (e) {\n        if (e.message) {\n          console.error(e.message);\n        }\n      };\n      ws.onclose = function () {\n        console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n      };\n    }\n  }\n}\nasync function handleMessage(data /*: HMRMessage */) {\n  checkedAssets = {} /*: {|[string]: boolean|} */;\n  disposedAssets = {} /*: {|[string]: boolean|} */;\n  assetsToAccept = [];\n  assetsToDispose = [];\n  bundleNotFound = false;\n  if (data.type === 'reload') {\n    fullReload();\n  } else if (data.type === 'update') {\n    // Remove error overlay if there is one\n    if (typeof document !== 'undefined') {\n      removeErrorOverlay();\n    }\n    let assets = data.assets;\n\n    // Handle HMR Update\n    let handled = assets.every(asset => {\n      return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n    });\n\n    // Dispatch a custom event in case a bundle was not found. This might mean\n    // an asset on the server changed and we should reload the page. This event\n    // gives the client an opportunity to refresh without losing state\n    // (e.g. via React Server Components). If e.preventDefault() is not called,\n    // we will trigger a full page reload.\n    if (handled && bundleNotFound && assets.some(a => a.envHash !== HMR_ENV_HASH) && typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n      handled = !window.dispatchEvent(new CustomEvent('parcelhmrreload', {\n        cancelable: true\n      }));\n    }\n    if (handled) {\n      console.clear();\n\n      // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n      if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n        window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n      }\n      await hmrApplyUpdates(assets);\n      hmrDisposeQueue();\n\n      // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n      let processedAssets = {};\n      for (let i = 0; i < assetsToAccept.length; i++) {\n        let id = assetsToAccept[i][1];\n        if (!processedAssets[id]) {\n          hmrAccept(assetsToAccept[i][0], id);\n          processedAssets[id] = true;\n        }\n      }\n    } else fullReload();\n  }\n  if (data.type === 'error') {\n    // Log parcel errors to console\n    for (let ansiDiagnostic of data.diagnostics.ansi) {\n      let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n      console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n    }\n    if (typeof document !== 'undefined') {\n      // Render the fancy html overlay\n      removeErrorOverlay();\n      var overlay = createErrorOverlay(data.diagnostics.html);\n      // $FlowFixMe\n      document.body.appendChild(overlay);\n    }\n  }\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"${protocol === 'wss' ? 'https' : 'http'}://${hostname}:${port}/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if (typeof location !== 'undefined' && 'reload' in location) {\n    location.reload();\n  } else if (typeof extCtx !== 'undefined' && extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  } else {\n    try {\n      let {\n        workerData,\n        parentPort\n      } = module.bundle.root('node:worker_threads') /*: any*/;\n      if (workerData !== null && workerData !== void 0 && workerData.__parcel) {\n        parentPort.postMessage('restart');\n      }\n    } catch (err) {\n      console.error('[parcel] ⚠️ An HMR update was not accepted. Please restart the process.');\n    }\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout || typeof document === 'undefined') {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    }\n\n    // Always traverse to the parent bundle, even if we already replaced the asset in this bundle.\n    // This is required in case modules are duplicated. We need to ensure all instances have the updated code.\n    if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  checkedAssets = {};\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else if (a !== null) {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      bundleNotFound = true;\n      return true;\n    }\n    return hmrAcceptCheckOne(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return null;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  if (!cached) {\n    return true;\n  }\n  assetsToDispose.push([bundle, id]);\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n  return false;\n}\nfunction hmrDisposeQueue() {\n  // Dispose all old assets.\n  for (let i = 0; i < assetsToDispose.length; i++) {\n    let id = assetsToDispose[i][1];\n    if (!disposedAssets[id]) {\n      hmrDispose(assetsToDispose[i][0], id);\n      disposedAssets[id] = true;\n    }\n  }\n  assetsToDispose = [];\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    let assetsToAlsoAccept = [];\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      let additionalAssets = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (Array.isArray(additionalAssets) && additionalAssets.length) {\n        assetsToAlsoAccept.push(...additionalAssets);\n      }\n    });\n    if (assetsToAlsoAccept.length) {\n      let handled = assetsToAlsoAccept.every(function (a) {\n        return hmrAcceptCheck(a[0], a[1]);\n      });\n      if (!handled) {\n        return fullReload();\n      }\n      hmrDisposeQueue();\n    }\n  }\n}",null,null,"/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const DEFAULT_SW_PATH = '/firebase-messaging-sw.js';\nexport const DEFAULT_SW_SCOPE = '/firebase-cloud-messaging-push-scope';\n\nexport const DEFAULT_VAPID_KEY =\n  'BDOU99-h67HcA6JeFXHbSNMu7e2yNNu3RzoMj8TM4W88jITfq7ZmPvIM1Iv-4_l2LxQcYwhqby2xGpWwzjfAnG4';\n\nexport const ENDPOINT = 'https://fcmregistrations.googleapis.com/v1';\n\n/** Key of FCM Payload in Notification's data field. */\nexport const FCM_MSG = 'FCM_MSG';\n\nexport const CONSOLE_CAMPAIGN_ID = 'google.c.a.c_id';\nexport const CONSOLE_CAMPAIGN_NAME = 'google.c.a.c_l';\nexport const CONSOLE_CAMPAIGN_TIME = 'google.c.a.ts';\n/** Set to '1' if Analytics is enabled for the campaign */\nexport const CONSOLE_CAMPAIGN_ANALYTICS_ENABLED = 'google.c.a.e';\nexport const TAG = 'FirebaseMessaging: ';\nexport const MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST = 1000;\nexport const MAX_RETRIES = 3;\nexport const LOG_INTERVAL_IN_MS = 86400000; //24 hour\nexport const DEFAULT_BACKOFF_TIME_MS = 5000;\nexport const DEFAULT_REGISTRATION_TIMEOUT = 10000;\n\n// FCM log source name registered at Firelog: 'FCM_CLIENT_EVENT_LOGGING'. It uniquely identifies\n// FCM's logging configuration.\nexport const FCM_LOG_SOURCE = 1249;\n\n// Defined as in proto/messaging_event.proto. Neglecting fields that are supported.\nexport const SDK_PLATFORM_WEB = 3;\nexport const EVENT_MESSAGE_DELIVERED = 1;\n\nexport enum MessageType {\n  DATA_MESSAGE = 1,\n  DISPLAY_NOTIFICATION = 3\n}\n","/**\n * @license\n * Copyright 2018 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License. You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under the License\n * is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express\n * or implied. See the License for the specific language governing permissions and limitations under\n * the License.\n */\n\nimport {\n  CONSOLE_CAMPAIGN_ANALYTICS_ENABLED,\n  CONSOLE_CAMPAIGN_ID,\n  CONSOLE_CAMPAIGN_NAME,\n  CONSOLE_CAMPAIGN_TIME\n} from '../util/constants';\n\nexport interface MessagePayloadInternal {\n  notification?: NotificationPayloadInternal;\n  data?: unknown;\n  fcmOptions?: FcmOptionsInternal;\n  messageType?: MessageType;\n  isFirebaseMessaging?: boolean;\n  from: string;\n  fcmMessageId: string;\n  productId: number;\n  // eslint-disable-next-line camelcase\n  collapse_key: string;\n}\n\n// https://developer.mozilla.org/en-US/docs/Web/API/Notification/actions\ninterface NotificationAction {\n  action: string;\n  icon?: string;\n  title: string;\n}\n\n/**\n * This interface defines experimental properties of NotificationOptions, that are not part of\n * the interface in the generated DOM types at https://github.com/microsoft/TypeScript-DOM-lib-generator/blob/179bdd84a944933a3103f29c2274c9f5a857b693/baselines/dom.generated.d.ts#L1012\n * https://developer.mozilla.org/en-US/docs/Web/API/Notification\n */\ninterface NotificationOptionsExperimental extends NotificationOptions {\n  readonly maxActions?: number;\n  readonly actions?: NotificationAction[];\n  readonly image?: string;\n  readonly renotify?: boolean;\n  readonly timestamp?: EpochTimeStamp;\n  readonly vibrate?: VibratePattern;\n}\n\nexport interface NotificationPayloadInternal\n  extends NotificationOptionsExperimental {\n  title: string;\n  // Supported in the Legacy Send API.\n  // See:https://firebase.google.com/docs/cloud-messaging/xmpp-server-ref.\n  // eslint-disable-next-line camelcase\n  click_action?: string;\n  icon?: string;\n}\n\n// Defined in\n// https://firebase.google.com/docs/reference/fcm/rest/v1/projects.messages#webpushfcmoptions. Note\n// that the keys are sent to the clients in snake cases which we need to convert to camel so it can\n// be exposed as a type to match the Firebase API convention.\nexport interface FcmOptionsInternal {\n  link?: string;\n\n  // eslint-disable-next-line camelcase\n  analytics_label?: string;\n}\n\nexport enum MessageType {\n  PUSH_RECEIVED = 'push-received',\n  NOTIFICATION_CLICKED = 'notification-clicked'\n}\n\n/** Additional data of a message sent from the FN Console. */\nexport interface ConsoleMessageData {\n  [CONSOLE_CAMPAIGN_ID]: string;\n  [CONSOLE_CAMPAIGN_TIME]: string;\n  [CONSOLE_CAMPAIGN_NAME]?: string;\n  [CONSOLE_CAMPAIGN_ANALYTICS_ENABLED]?: '1';\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function arrayToBase64(array: Uint8Array | ArrayBuffer): string {\n  const uint8Array = new Uint8Array(array);\n  const base64String = btoa(String.fromCharCode(...uint8Array));\n  return base64String.replace(/=/g, '').replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n\nexport function base64ToArray(base64String: string): Uint8Array {\n  const padding = '='.repeat((4 - (base64String.length % 4)) % 4);\n  const base64 = (base64String + padding)\n    .replace(/\\-/g, '+')\n    .replace(/_/g, '/');\n\n  const rawData = atob(base64);\n  const outputArray = new Uint8Array(rawData.length);\n\n  for (let i = 0; i < rawData.length; ++i) {\n    outputArray[i] = rawData.charCodeAt(i);\n  }\n  return outputArray;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deleteDB, openDB } from 'idb';\n\nimport { TokenDetails } from '../interfaces/token-details';\nimport { arrayToBase64 } from './array-base64-translator';\n\n// https://github.com/firebase/firebase-js-sdk/blob/7857c212f944a2a9eb421fd4cb7370181bc034b5/packages/messaging/src/interfaces/token-details.ts\nexport interface V2TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: string | Uint8Array;\n  subscription: PushSubscription;\n  fcmSenderId: string;\n  fcmPushSet: string;\n  createTime?: number;\n  endpoint?: string;\n  auth?: string;\n  p256dh?: string;\n}\n\n// https://github.com/firebase/firebase-js-sdk/blob/6b5b15ce4ea3df5df5df8a8b33a4e41e249c7715/packages/messaging/src/interfaces/token-details.ts\nexport interface V3TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: Uint8Array;\n  fcmSenderId: string;\n  fcmPushSet: string;\n  endpoint: string;\n  auth: ArrayBuffer;\n  p256dh: ArrayBuffer;\n  createTime: number;\n}\n\n// https://github.com/firebase/firebase-js-sdk/blob/9567dba664732f681fa7fe60f5b7032bb1daf4c9/packages/messaging/src/interfaces/token-details.ts\nexport interface V4TokenDetails {\n  fcmToken: string;\n  swScope: string;\n  vapidKey: Uint8Array;\n  fcmSenderId: string;\n  endpoint: string;\n  auth: ArrayBufferLike;\n  p256dh: ArrayBufferLike;\n  createTime: number;\n}\n\nconst OLD_DB_NAME = 'fcm_token_details_db';\n/**\n * The last DB version of 'fcm_token_details_db' was 4. This is one higher, so that the upgrade\n * callback is called for all versions of the old DB.\n */\nconst OLD_DB_VERSION = 5;\nconst OLD_OBJECT_STORE_NAME = 'fcm_token_object_Store';\n\nexport async function migrateOldDatabase(\n  senderId: string\n): Promise<TokenDetails | null> {\n  if ('databases' in indexedDB) {\n    // indexedDb.databases() is an IndexedDB v3 API and does not exist in all browsers. TODO: Remove\n    // typecast when it lands in TS types.\n    const databases = await (\n      indexedDB as {\n        databases(): Promise<Array<{ name: string; version: number }>>;\n      }\n    ).databases();\n    const dbNames = databases.map(db => db.name);\n\n    if (!dbNames.includes(OLD_DB_NAME)) {\n      // old DB didn't exist, no need to open.\n      return null;\n    }\n  }\n\n  let tokenDetails: TokenDetails | null = null;\n\n  const db = await openDB(OLD_DB_NAME, OLD_DB_VERSION, {\n    upgrade: async (db, oldVersion, newVersion, upgradeTransaction) => {\n      if (oldVersion < 2) {\n        // Database too old, skip migration.\n        return;\n      }\n\n      if (!db.objectStoreNames.contains(OLD_OBJECT_STORE_NAME)) {\n        // Database did not exist. Nothing to do.\n        return;\n      }\n\n      const objectStore = upgradeTransaction.objectStore(OLD_OBJECT_STORE_NAME);\n      const value = await objectStore.index('fcmSenderId').get(senderId);\n      await objectStore.clear();\n\n      if (!value) {\n        // No entry in the database, nothing to migrate.\n        return;\n      }\n\n      if (oldVersion === 2) {\n        const oldDetails = value as V2TokenDetails;\n\n        if (!oldDetails.auth || !oldDetails.p256dh || !oldDetails.endpoint) {\n          return;\n        }\n\n        tokenDetails = {\n          token: oldDetails.fcmToken,\n          createTime: oldDetails.createTime ?? Date.now(),\n          subscriptionOptions: {\n            auth: oldDetails.auth,\n            p256dh: oldDetails.p256dh,\n            endpoint: oldDetails.endpoint,\n            swScope: oldDetails.swScope,\n            vapidKey:\n              typeof oldDetails.vapidKey === 'string'\n                ? oldDetails.vapidKey\n                : arrayToBase64(oldDetails.vapidKey)\n          }\n        };\n      } else if (oldVersion === 3) {\n        const oldDetails = value as V3TokenDetails;\n\n        tokenDetails = {\n          token: oldDetails.fcmToken,\n          createTime: oldDetails.createTime,\n          subscriptionOptions: {\n            auth: arrayToBase64(oldDetails.auth),\n            p256dh: arrayToBase64(oldDetails.p256dh),\n            endpoint: oldDetails.endpoint,\n            swScope: oldDetails.swScope,\n            vapidKey: arrayToBase64(oldDetails.vapidKey)\n          }\n        };\n      } else if (oldVersion === 4) {\n        const oldDetails = value as V4TokenDetails;\n\n        tokenDetails = {\n          token: oldDetails.fcmToken,\n          createTime: oldDetails.createTime,\n          subscriptionOptions: {\n            auth: arrayToBase64(oldDetails.auth),\n            p256dh: arrayToBase64(oldDetails.p256dh),\n            endpoint: oldDetails.endpoint,\n            swScope: oldDetails.swScope,\n            vapidKey: arrayToBase64(oldDetails.vapidKey)\n          }\n        };\n      }\n    }\n  });\n  db.close();\n\n  // Delete all old databases.\n  await deleteDB(OLD_DB_NAME);\n  await deleteDB('fcm_vapid_details_db');\n  await deleteDB('undefined');\n\n  return checkTokenDetails(tokenDetails) ? tokenDetails : null;\n}\n\nfunction checkTokenDetails(\n  tokenDetails: TokenDetails | null\n): tokenDetails is TokenDetails {\n  if (!tokenDetails || !tokenDetails.subscriptionOptions) {\n    return false;\n  }\n  const { subscriptionOptions } = tokenDetails;\n  return (\n    typeof tokenDetails.createTime === 'number' &&\n    tokenDetails.createTime > 0 &&\n    typeof tokenDetails.token === 'string' &&\n    tokenDetails.token.length > 0 &&\n    typeof subscriptionOptions.auth === 'string' &&\n    subscriptionOptions.auth.length > 0 &&\n    typeof subscriptionOptions.p256dh === 'string' &&\n    subscriptionOptions.p256dh.length > 0 &&\n    typeof subscriptionOptions.endpoint === 'string' &&\n    subscriptionOptions.endpoint.length > 0 &&\n    typeof subscriptionOptions.swScope === 'string' &&\n    subscriptionOptions.swScope.length > 0 &&\n    typeof subscriptionOptions.vapidKey === 'string' &&\n    subscriptionOptions.vapidKey.length > 0\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DBSchema, IDBPDatabase, deleteDB, openDB } from 'idb';\n\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { TokenDetails } from '../interfaces/token-details';\nimport { migrateOldDatabase } from '../helpers/migrate-old-database';\n\n// Exported for tests.\nexport const DATABASE_NAME = 'firebase-messaging-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-messaging-store';\n\ninterface MessagingDB extends DBSchema {\n  'firebase-messaging-store': {\n    key: string;\n    value: TokenDetails;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<MessagingDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<MessagingDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n      upgrade: (upgradeDb, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through behavior is what we want,\n        // because if there are multiple versions between the old version and the current version, we\n        // want ALL the migrations that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            upgradeDb.createObjectStore(OBJECT_STORE_NAME);\n        }\n      }\n    });\n  }\n  return dbPromise;\n}\n\n/** Gets record(s) from the objectStore that match the given key. */\nexport async function dbGet(\n  firebaseDependencies: FirebaseInternalDependencies\n): Promise<TokenDetails | undefined> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tokenDetails = (await db\n    .transaction(OBJECT_STORE_NAME)\n    .objectStore(OBJECT_STORE_NAME)\n    .get(key)) as TokenDetails;\n\n  if (tokenDetails) {\n    return tokenDetails;\n  } else {\n    // Check if there is a tokenDetails object in the old DB.\n    const oldTokenDetails = await migrateOldDatabase(\n      firebaseDependencies.appConfig.senderId\n    );\n    if (oldTokenDetails) {\n      await dbSet(firebaseDependencies, oldTokenDetails);\n      return oldTokenDetails;\n    }\n  }\n}\n\n/** Assigns or overwrites the record for the given key with the given value. */\nexport async function dbSet(\n  firebaseDependencies: FirebaseInternalDependencies,\n  tokenDetails: TokenDetails\n): Promise<TokenDetails> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).put(tokenDetails, key);\n  await tx.done;\n  return tokenDetails;\n}\n\n/** Removes record(s) from the objectStore that match the given key. */\nexport async function dbRemove(\n  firebaseDependencies: FirebaseInternalDependencies\n): Promise<void> {\n  const key = getKey(firebaseDependencies);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.done;\n}\n\n/** Deletes the DB. Useful for tests. */\nexport async function dbDelete(): Promise<void> {\n  if (dbPromise) {\n    (await dbPromise).close();\n    await deleteDB(DATABASE_NAME);\n    dbPromise = null;\n  }\n}\n\nfunction getKey({ appConfig }: FirebaseInternalDependencies): string {\n  return appConfig.appId;\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, ErrorMap } from '@firebase/util';\n\nexport const enum ErrorCode {\n  MISSING_APP_CONFIG_VALUES = 'missing-app-config-values',\n  AVAILABLE_IN_WINDOW = 'only-available-in-window',\n  AVAILABLE_IN_SW = 'only-available-in-sw',\n  PERMISSION_DEFAULT = 'permission-default',\n  PERMISSION_BLOCKED = 'permission-blocked',\n  UNSUPPORTED_BROWSER = 'unsupported-browser',\n  INDEXED_DB_UNSUPPORTED = 'indexed-db-unsupported',\n  FAILED_DEFAULT_REGISTRATION = 'failed-service-worker-registration',\n  TOKEN_SUBSCRIBE_FAILED = 'token-subscribe-failed',\n  TOKEN_SUBSCRIBE_NO_TOKEN = 'token-subscribe-no-token',\n  TOKEN_UNSUBSCRIBE_FAILED = 'token-unsubscribe-failed',\n  TOKEN_UPDATE_FAILED = 'token-update-failed',\n  TOKEN_UPDATE_NO_TOKEN = 'token-update-no-token',\n  INVALID_BG_HANDLER = 'invalid-bg-handler',\n  USE_SW_AFTER_GET_TOKEN = 'use-sw-after-get-token',\n  INVALID_SW_REGISTRATION = 'invalid-sw-registration',\n  USE_VAPID_KEY_AFTER_GET_TOKEN = 'use-vapid-key-after-get-token',\n  INVALID_VAPID_KEY = 'invalid-vapid-key'\n}\n\nexport const ERROR_MAP: ErrorMap<ErrorCode> = {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]:\n    'Missing App configuration value: \"{$valueName}\"',\n  [ErrorCode.AVAILABLE_IN_WINDOW]:\n    'This method is available in a Window context.',\n  [ErrorCode.AVAILABLE_IN_SW]:\n    'This method is available in a service worker context.',\n  [ErrorCode.PERMISSION_DEFAULT]:\n    'The notification permission was not granted and dismissed instead.',\n  [ErrorCode.PERMISSION_BLOCKED]:\n    'The notification permission was not granted and blocked instead.',\n  [ErrorCode.UNSUPPORTED_BROWSER]:\n    \"This browser doesn't support the API's required to use the Firebase SDK.\",\n  [ErrorCode.INDEXED_DB_UNSUPPORTED]:\n    \"This browser doesn't support indexedDb.open() (ex. Safari iFrame, Firefox Private Browsing, etc)\",\n  [ErrorCode.FAILED_DEFAULT_REGISTRATION]:\n    'We are unable to register the default service worker. {$browserErrorMessage}',\n  [ErrorCode.TOKEN_SUBSCRIBE_FAILED]:\n    'A problem occurred while subscribing the user to FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN]:\n    'FCM returned no token when subscribing the user to push.',\n  [ErrorCode.TOKEN_UNSUBSCRIBE_FAILED]:\n    'A problem occurred while unsubscribing the ' +\n    'user from FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_UPDATE_FAILED]:\n    'A problem occurred while updating the user from FCM: {$errorInfo}',\n  [ErrorCode.TOKEN_UPDATE_NO_TOKEN]:\n    'FCM returned no token when updating the user to push.',\n  [ErrorCode.USE_SW_AFTER_GET_TOKEN]:\n    'The useServiceWorker() method may only be called once and must be ' +\n    'called before calling getToken() to ensure your service worker is used.',\n  [ErrorCode.INVALID_SW_REGISTRATION]:\n    'The input to useServiceWorker() must be a ServiceWorkerRegistration.',\n  [ErrorCode.INVALID_BG_HANDLER]:\n    'The input to setBackgroundMessageHandler() must be a function.',\n  [ErrorCode.INVALID_VAPID_KEY]: 'The public VAPID key must be a string.',\n  [ErrorCode.USE_VAPID_KEY_AFTER_GET_TOKEN]:\n    'The usePublicVapidKey() method may only be called once and must be ' +\n    'called before calling getToken() to ensure your VAPID key is used.'\n};\n\ninterface ErrorParams {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]: {\n    valueName: string;\n  };\n  [ErrorCode.FAILED_DEFAULT_REGISTRATION]: { browserErrorMessage: string };\n  [ErrorCode.TOKEN_SUBSCRIBE_FAILED]: { errorInfo: string };\n  [ErrorCode.TOKEN_UNSUBSCRIBE_FAILED]: { errorInfo: string };\n  [ErrorCode.TOKEN_UPDATE_FAILED]: { errorInfo: string };\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  'messaging',\n  'Messaging',\n  ERROR_MAP\n);\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_VAPID_KEY, ENDPOINT } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { SubscriptionOptions, TokenDetails } from '../interfaces/token-details';\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\n\nexport interface ApiResponse {\n  token?: string;\n  error?: { message: string };\n}\n\nexport interface ApiRequestBody {\n  web: {\n    endpoint: string;\n    p256dh: string;\n    auth: string;\n    applicationPubKey?: string;\n  };\n}\n\nexport async function requestGetToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  subscriptionOptions: SubscriptionOptions\n): Promise<string> {\n  const headers = await getHeaders(firebaseDependencies);\n  const body = getBody(subscriptionOptions);\n\n  const subscribeOptions = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  let responseData: ApiResponse;\n  try {\n    const response = await fetch(\n      getEndpoint(firebaseDependencies.appConfig),\n      subscribeOptions\n    );\n    responseData = await response.json();\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_FAILED, {\n      errorInfo: (err as Error)?.toString()\n    });\n  }\n\n  if (responseData.error) {\n    const message = responseData.error.message;\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_FAILED, {\n      errorInfo: message\n    });\n  }\n\n  if (!responseData.token) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_SUBSCRIBE_NO_TOKEN);\n  }\n\n  return responseData.token;\n}\n\nexport async function requestUpdateToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  tokenDetails: TokenDetails\n): Promise<string> {\n  const headers = await getHeaders(firebaseDependencies);\n  const body = getBody(tokenDetails.subscriptionOptions!);\n\n  const updateOptions = {\n    method: 'PATCH',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  let responseData: ApiResponse;\n  try {\n    const response = await fetch(\n      `${getEndpoint(firebaseDependencies.appConfig)}/${tokenDetails.token}`,\n      updateOptions\n    );\n    responseData = await response.json();\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_FAILED, {\n      errorInfo: (err as Error)?.toString()\n    });\n  }\n\n  if (responseData.error) {\n    const message = responseData.error.message;\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_FAILED, {\n      errorInfo: message\n    });\n  }\n\n  if (!responseData.token) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UPDATE_NO_TOKEN);\n  }\n\n  return responseData.token;\n}\n\nexport async function requestDeleteToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  token: string\n): Promise<void> {\n  const headers = await getHeaders(firebaseDependencies);\n\n  const unsubscribeOptions = {\n    method: 'DELETE',\n    headers\n  };\n\n  try {\n    const response = await fetch(\n      `${getEndpoint(firebaseDependencies.appConfig)}/${token}`,\n      unsubscribeOptions\n    );\n    const responseData: ApiResponse = await response.json();\n    if (responseData.error) {\n      const message = responseData.error.message;\n      throw ERROR_FACTORY.create(ErrorCode.TOKEN_UNSUBSCRIBE_FAILED, {\n        errorInfo: message\n      });\n    }\n  } catch (err) {\n    throw ERROR_FACTORY.create(ErrorCode.TOKEN_UNSUBSCRIBE_FAILED, {\n      errorInfo: (err as Error)?.toString()\n    });\n  }\n}\n\nfunction getEndpoint({ projectId }: AppConfig): string {\n  return `${ENDPOINT}/projects/${projectId!}/registrations`;\n}\n\nasync function getHeaders({\n  appConfig,\n  installations\n}: FirebaseInternalDependencies): Promise<Headers> {\n  const authToken = await installations.getToken();\n\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': appConfig.apiKey!,\n    'x-goog-firebase-installations-auth': `FIS ${authToken}`\n  });\n}\n\nfunction getBody({\n  p256dh,\n  auth,\n  endpoint,\n  vapidKey\n}: SubscriptionOptions): ApiRequestBody {\n  const body: ApiRequestBody = {\n    web: {\n      endpoint,\n      auth,\n      p256dh\n    }\n  };\n\n  if (vapidKey !== DEFAULT_VAPID_KEY) {\n    body.web.applicationPubKey = vapidKey;\n  }\n\n  return body;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { SubscriptionOptions, TokenDetails } from '../interfaces/token-details';\nimport {\n  arrayToBase64,\n  base64ToArray\n} from '../helpers/array-base64-translator';\nimport { dbGet, dbRemove, dbSet } from './idb-manager';\nimport {\n  requestDeleteToken,\n  requestGetToken,\n  requestUpdateToken\n} from './requests';\n\nimport { FirebaseInternalDependencies } from '../interfaces/internal-dependencies';\nimport { MessagingService } from '../messaging-service';\n\n// UpdateRegistration will be called once every week.\nconst TOKEN_EXPIRATION_MS = 7 * 24 * 60 * 60 * 1000; // 7 days\n\nexport async function getTokenInternal(\n  messaging: MessagingService\n): Promise<string> {\n  const pushSubscription = await getPushSubscription(\n    messaging.swRegistration!,\n    messaging.vapidKey!\n  );\n\n  const subscriptionOptions: SubscriptionOptions = {\n    vapidKey: messaging.vapidKey!,\n    swScope: messaging.swRegistration!.scope,\n    endpoint: pushSubscription.endpoint,\n    auth: arrayToBase64(pushSubscription.getKey('auth')!),\n    p256dh: arrayToBase64(pushSubscription.getKey('p256dh')!)\n  };\n\n  const tokenDetails = await dbGet(messaging.firebaseDependencies);\n  if (!tokenDetails) {\n    // No token, get a new one.\n    return getNewToken(messaging.firebaseDependencies, subscriptionOptions);\n  } else if (\n    !isTokenValid(tokenDetails.subscriptionOptions!, subscriptionOptions)\n  ) {\n    // Invalid token, get a new one.\n    try {\n      await requestDeleteToken(\n        messaging.firebaseDependencies!,\n        tokenDetails.token\n      );\n    } catch (e) {\n      // Suppress errors because of #2364\n      console.warn(e);\n    }\n\n    return getNewToken(messaging.firebaseDependencies!, subscriptionOptions);\n  } else if (Date.now() >= tokenDetails.createTime + TOKEN_EXPIRATION_MS) {\n    // Weekly token refresh\n    return updateToken(messaging, {\n      token: tokenDetails.token,\n      createTime: Date.now(),\n      subscriptionOptions\n    });\n  } else {\n    // Valid token, nothing to do.\n    return tokenDetails.token;\n  }\n}\n\n/**\n * This method deletes the token from the database, unsubscribes the token from FCM, and unregisters\n * the push subscription if it exists.\n */\nexport async function deleteTokenInternal(\n  messaging: MessagingService\n): Promise<boolean> {\n  const tokenDetails = await dbGet(messaging.firebaseDependencies);\n  if (tokenDetails) {\n    await requestDeleteToken(\n      messaging.firebaseDependencies,\n      tokenDetails.token\n    );\n    await dbRemove(messaging.firebaseDependencies);\n  }\n\n  // Unsubscribe from the push subscription.\n  const pushSubscription =\n    await messaging.swRegistration!.pushManager.getSubscription();\n  if (pushSubscription) {\n    return pushSubscription.unsubscribe();\n  }\n\n  // If there's no SW, consider it a success.\n  return true;\n}\n\nasync function updateToken(\n  messaging: MessagingService,\n  tokenDetails: TokenDetails\n): Promise<string> {\n  try {\n    const updatedToken = await requestUpdateToken(\n      messaging.firebaseDependencies,\n      tokenDetails\n    );\n\n    const updatedTokenDetails: TokenDetails = {\n      ...tokenDetails,\n      token: updatedToken,\n      createTime: Date.now()\n    };\n\n    await dbSet(messaging.firebaseDependencies, updatedTokenDetails);\n    return updatedToken;\n  } catch (e) {\n    throw e;\n  }\n}\n\nasync function getNewToken(\n  firebaseDependencies: FirebaseInternalDependencies,\n  subscriptionOptions: SubscriptionOptions\n): Promise<string> {\n  const token = await requestGetToken(\n    firebaseDependencies,\n    subscriptionOptions\n  );\n  const tokenDetails: TokenDetails = {\n    token,\n    createTime: Date.now(),\n    subscriptionOptions\n  };\n  await dbSet(firebaseDependencies, tokenDetails);\n  return tokenDetails.token;\n}\n\n/**\n * Gets a PushSubscription for the current user.\n */\nasync function getPushSubscription(\n  swRegistration: ServiceWorkerRegistration,\n  vapidKey: string\n): Promise<PushSubscription> {\n  const subscription = await swRegistration.pushManager.getSubscription();\n  if (subscription) {\n    return subscription;\n  }\n\n  return swRegistration.pushManager.subscribe({\n    userVisibleOnly: true,\n    // Chrome <= 75 doesn't support base64-encoded VAPID key. For backward compatibility, VAPID key\n    // submitted to pushManager#subscribe must be of type Uint8Array.\n    applicationServerKey: base64ToArray(vapidKey)\n  });\n}\n\n/**\n * Checks if the saved tokenDetails object matches the configuration provided.\n */\nfunction isTokenValid(\n  dbOptions: SubscriptionOptions,\n  currentOptions: SubscriptionOptions\n): boolean {\n  const isVapidKeyEqual = currentOptions.vapidKey === dbOptions.vapidKey;\n  const isEndpointEqual = currentOptions.endpoint === dbOptions.endpoint;\n  const isAuthEqual = currentOptions.auth === dbOptions.auth;\n  const isP256dhEqual = currentOptions.p256dh === dbOptions.p256dh;\n\n  return isVapidKeyEqual && isEndpointEqual && isAuthEqual && isP256dhEqual;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { MessagePayload } from '../interfaces/public-types';\nimport { MessagePayloadInternal } from '../interfaces/internal-message-payload';\n\nexport function externalizePayload(\n  internalPayload: MessagePayloadInternal\n): MessagePayload {\n  const payload: MessagePayload = {\n    from: internalPayload.from,\n    // eslint-disable-next-line camelcase\n    collapseKey: internalPayload.collapse_key,\n    // eslint-disable-next-line camelcase\n    messageId: internalPayload.fcmMessageId\n  } as MessagePayload;\n\n  propagateNotificationPayload(payload, internalPayload);\n  propagateDataPayload(payload, internalPayload);\n  propagateFcmOptions(payload, internalPayload);\n\n  return payload;\n}\n\nfunction propagateNotificationPayload(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  if (!messagePayloadInternal.notification) {\n    return;\n  }\n\n  payload.notification = {};\n\n  const title = messagePayloadInternal.notification!.title;\n  if (!!title) {\n    payload.notification!.title = title;\n  }\n\n  const body = messagePayloadInternal.notification!.body;\n  if (!!body) {\n    payload.notification!.body = body;\n  }\n\n  const image = messagePayloadInternal.notification!.image;\n  if (!!image) {\n    payload.notification!.image = image;\n  }\n\n  const icon = messagePayloadInternal.notification!.icon;\n  if (!!icon) {\n    payload.notification!.icon = icon;\n  }\n}\n\nfunction propagateDataPayload(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  if (!messagePayloadInternal.data) {\n    return;\n  }\n\n  payload.data = messagePayloadInternal.data as { [key: string]: string };\n}\n\nfunction propagateFcmOptions(\n  payload: MessagePayload,\n  messagePayloadInternal: MessagePayloadInternal\n): void {\n  // fcmOptions.link value is written into notification.click_action. see more in b/232072111\n  if (\n    !messagePayloadInternal.fcmOptions &&\n    !messagePayloadInternal.notification?.click_action\n  ) {\n    return;\n  }\n\n  payload.fcmOptions = {};\n\n  const link =\n    messagePayloadInternal.fcmOptions?.link ??\n    messagePayloadInternal.notification?.click_action;\n\n  if (!!link) {\n    payload.fcmOptions!.link = link;\n  }\n\n  // eslint-disable-next-line camelcase\n  const analyticsLabel = messagePayloadInternal.fcmOptions?.analytics_label;\n  if (!!analyticsLabel) {\n    payload.fcmOptions!.analyticsLabel = analyticsLabel;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CONSOLE_CAMPAIGN_ID } from '../util/constants';\nimport { ConsoleMessageData } from '../interfaces/internal-message-payload';\n\nexport function isConsoleMessage(data: unknown): data is ConsoleMessageData {\n  // This message has a campaign ID, meaning it was sent using the Firebase Console.\n  return typeof data === 'object' && !!data && CONSOLE_CAMPAIGN_ID in data;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DEFAULT_BACKOFF_TIME_MS,\n  EVENT_MESSAGE_DELIVERED,\n  FCM_LOG_SOURCE,\n  LOG_INTERVAL_IN_MS,\n  MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST,\n  MAX_RETRIES,\n  MessageType,\n  SDK_PLATFORM_WEB\n} from '../util/constants';\nimport {\n  FcmEvent,\n  LogEvent,\n  LogRequest,\n  LogResponse,\n  ComplianceData\n} from '../interfaces/logging-types';\n\nimport { MessagePayloadInternal } from '../interfaces/internal-message-payload';\nimport { MessagingService } from '../messaging-service';\n\nconst LOG_ENDPOINT = 'https://play.google.com/log?format=json_proto3';\n\nconst FCM_TRANSPORT_KEY = _mergeStrings(\n  'AzSCbw63g1R0nCw85jG8',\n  'Iaya3yLKwmgvh7cF0q4'\n);\n\nexport function startLoggingService(messaging: MessagingService): void {\n  if (!messaging.isLogServiceStarted) {\n    _processQueue(messaging, LOG_INTERVAL_IN_MS);\n    messaging.isLogServiceStarted = true;\n  }\n}\n\n/**\n *\n * @param messaging the messaging instance.\n * @param offsetInMs this method execute after `offsetInMs` elapsed .\n */\nexport function _processQueue(\n  messaging: MessagingService,\n  offsetInMs: number\n): void {\n  setTimeout(async () => {\n    if (!messaging.deliveryMetricsExportedToBigQueryEnabled) {\n      // flush events and terminate logging service\n      messaging.logEvents = [];\n      messaging.isLogServiceStarted = false;\n\n      return;\n    }\n\n    if (!messaging.logEvents.length) {\n      return _processQueue(messaging, LOG_INTERVAL_IN_MS);\n    }\n\n    await _dispatchLogEvents(messaging);\n  }, offsetInMs);\n}\n\nexport async function _dispatchLogEvents(\n  messaging: MessagingService\n): Promise<void> {\n  for (\n    let i = 0, n = messaging.logEvents.length;\n    i < n;\n    i += MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST\n  ) {\n    const logRequest = _createLogRequest(\n      messaging.logEvents.slice(i, i + MAX_NUMBER_OF_EVENTS_PER_LOG_REQUEST)\n    );\n\n    let retryCount = 0,\n      response = {} as Response;\n\n    do {\n      try {\n        response = await fetch(\n          LOG_ENDPOINT.concat('&key=', FCM_TRANSPORT_KEY),\n          {\n            method: 'POST',\n            body: JSON.stringify(logRequest)\n          }\n        );\n\n        // don't retry on 200s or non retriable errors\n        if (response.ok || (!response.ok && !isRetriableError(response))) {\n          break;\n        }\n\n        if (!response.ok && isRetriableError(response)) {\n          // rethrow to retry with quota\n          throw new Error(\n            'a retriable Non-200 code is returned in fetch to Firelog endpoint. Retry'\n          );\n        }\n      } catch (error) {\n        const isLastAttempt = retryCount === MAX_RETRIES;\n        if (isLastAttempt) {\n          // existing the do-while interactive retry logic because retry quota has reached.\n          break;\n        }\n      }\n\n      let delayInMs: number;\n      try {\n        delayInMs = Number(\n          ((await response.json()) as LogResponse).nextRequestWaitMillis\n        );\n      } catch (e) {\n        delayInMs = DEFAULT_BACKOFF_TIME_MS;\n      }\n\n      await new Promise(resolve => setTimeout(resolve, delayInMs));\n\n      retryCount++;\n    } while (retryCount < MAX_RETRIES);\n  }\n\n  messaging.logEvents = [];\n  // schedule for next logging\n  _processQueue(messaging, LOG_INTERVAL_IN_MS);\n}\n\nfunction isRetriableError(response: Response): boolean {\n  const httpStatus = response.status;\n\n  return (\n    httpStatus === 429 ||\n    httpStatus === 500 ||\n    httpStatus === 503 ||\n    httpStatus === 504\n  );\n}\n\nexport async function stageLog(\n  messaging: MessagingService,\n  internalPayload: MessagePayloadInternal\n): Promise<void> {\n  const fcmEvent = createFcmEvent(\n    internalPayload,\n    await messaging.firebaseDependencies.installations.getId()\n  );\n\n  createAndEnqueueLogEvent(messaging, fcmEvent, internalPayload.productId);\n}\n\nfunction createFcmEvent(\n  internalPayload: MessagePayloadInternal,\n  fid: string\n): FcmEvent {\n  const fcmEvent = {} as FcmEvent;\n\n  /* eslint-disable camelcase */\n  // some fields should always be non-null. Still check to ensure.\n  if (!!internalPayload.from) {\n    fcmEvent.project_number = internalPayload.from;\n  }\n\n  if (!!internalPayload.fcmMessageId) {\n    fcmEvent.message_id = internalPayload.fcmMessageId;\n  }\n\n  fcmEvent.instance_id = fid;\n\n  if (!!internalPayload.notification) {\n    fcmEvent.message_type = MessageType.DISPLAY_NOTIFICATION.toString();\n  } else {\n    fcmEvent.message_type = MessageType.DATA_MESSAGE.toString();\n  }\n\n  fcmEvent.sdk_platform = SDK_PLATFORM_WEB.toString();\n  fcmEvent.package_name = self.origin.replace(/(^\\w+:|^)\\/\\//, '');\n\n  if (!!internalPayload.collapse_key) {\n    fcmEvent.collapse_key = internalPayload.collapse_key;\n  }\n\n  fcmEvent.event = EVENT_MESSAGE_DELIVERED.toString();\n\n  if (!!internalPayload.fcmOptions?.analytics_label) {\n    fcmEvent.analytics_label = internalPayload.fcmOptions?.analytics_label;\n  }\n\n  /* eslint-enable camelcase */\n  return fcmEvent;\n}\n\nfunction createAndEnqueueLogEvent(\n  messaging: MessagingService,\n  fcmEvent: FcmEvent,\n  productId: number\n): void {\n  const logEvent = {} as LogEvent;\n\n  /* eslint-disable camelcase */\n  logEvent.event_time_ms = Math.floor(Date.now()).toString();\n  logEvent.source_extension_json_proto3 = JSON.stringify({\n    messaging_client_event: fcmEvent\n  });\n\n  if (!!productId) {\n    logEvent.compliance_data = buildComplianceData(productId);\n  }\n  // eslint-disable-next-line camelcase\n\n  messaging.logEvents.push(logEvent);\n}\n\nfunction buildComplianceData(productId: number): ComplianceData {\n  const complianceData: ComplianceData = {\n    privacy_context: {\n      prequest: {\n        origin_associated_product_id: productId\n      }\n    }\n  };\n\n  return complianceData;\n}\n\nexport function _createLogRequest(logEventQueue: LogEvent[]): LogRequest {\n  const logRequest = {} as LogRequest;\n\n  /* eslint-disable camelcase */\n  logRequest.log_source = FCM_LOG_SOURCE.toString();\n  logRequest.log_event = logEventQueue;\n  /* eslint-enable camelcase */\n\n  return logRequest;\n}\n\nexport function _mergeStrings(s1: string, s2: string): string {\n  const resultArray = [];\n  for (let i = 0; i < s1.length; i++) {\n    resultArray.push(s1.charAt(i));\n    if (i < s2.length) {\n      resultArray.push(s2.charAt(i));\n    }\n  }\n\n  return resultArray.join('');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app';\n\nimport { AppConfig } from '../interfaces/app-config';\nimport { FirebaseError } from '@firebase/util';\n\nexport function extractAppConfig(app: FirebaseApp): AppConfig {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration Object');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n\n  // Required app config keys\n  const configKeys: ReadonlyArray<keyof FirebaseOptions> = [\n    'projectId',\n    'apiKey',\n    'appId',\n    'messagingSenderId'\n  ];\n\n  const { options } = app;\n  for (const keyName of configKeys) {\n    if (!options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: options.projectId!,\n    apiKey: options.apiKey!,\n    appId: options.appId!,\n    senderId: options.messagingSenderId!\n  };\n}\n\nfunction getMissingValueError(valueName: string): FirebaseError {\n  return ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES, {\n    valueName\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, _FirebaseService } from '@firebase/app';\nimport { MessagePayload, NextFn, Observer } from './interfaces/public-types';\n\nimport { FirebaseAnalyticsInternalName } from '@firebase/analytics-interop-types';\nimport { FirebaseInternalDependencies } from './interfaces/internal-dependencies';\nimport { LogEvent } from './interfaces/logging-types';\nimport { Provider } from '@firebase/component';\nimport { _FirebaseInstallationsInternal } from '@firebase/installations';\nimport { extractAppConfig } from './helpers/extract-app-config';\n\nexport class MessagingService implements _FirebaseService {\n  readonly app!: FirebaseApp;\n  readonly firebaseDependencies!: FirebaseInternalDependencies;\n\n  swRegistration?: ServiceWorkerRegistration;\n  vapidKey?: string;\n  // logging is only done with end user consent. Default to false.\n  deliveryMetricsExportedToBigQueryEnabled: boolean = false;\n\n  onBackgroundMessageHandler:\n    | NextFn<MessagePayload>\n    | Observer<MessagePayload>\n    | null = null;\n\n  onMessageHandler: NextFn<MessagePayload> | Observer<MessagePayload> | null =\n    null;\n\n  logEvents: LogEvent[] = [];\n  isLogServiceStarted: boolean = false;\n\n  constructor(\n    app: FirebaseApp,\n    installations: _FirebaseInstallationsInternal,\n    analyticsProvider: Provider<FirebaseAnalyticsInternalName>\n  ) {\n    const appConfig = extractAppConfig(app);\n\n    this.firebaseDependencies = {\n      app,\n      appConfig,\n      installations,\n      analyticsProvider\n    };\n  }\n\n  _delete(): Promise<void> {\n    return Promise.resolve();\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  DEFAULT_REGISTRATION_TIMEOUT,\n  DEFAULT_SW_PATH,\n  DEFAULT_SW_SCOPE\n} from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\n\nexport async function registerDefaultSw(\n  messaging: MessagingService\n): Promise<void> {\n  try {\n    messaging.swRegistration = await navigator.serviceWorker.register(\n      DEFAULT_SW_PATH,\n      {\n        scope: DEFAULT_SW_SCOPE\n      }\n    );\n\n    // The timing when browser updates sw when sw has an update is unreliable from experiment. It\n    // leads to version conflict when the SDK upgrades to a newer version in the main page, but sw\n    // is stuck with the old version. For example,\n    // https://github.com/firebase/firebase-js-sdk/issues/2590 The following line reliably updates\n    // sw if there was an update.\n    messaging.swRegistration.update().catch(() => {\n      /* it is non blocking and we don't care if it failed */\n    });\n    await waitForRegistrationActive(messaging.swRegistration);\n  } catch (e) {\n    throw ERROR_FACTORY.create(ErrorCode.FAILED_DEFAULT_REGISTRATION, {\n      browserErrorMessage: (e as Error)?.message\n    });\n  }\n}\n\n/**\n * Waits for registration to become active. MDN documentation claims that\n * a service worker registration should be ready to use after awaiting\n * navigator.serviceWorker.register() but that doesn't seem to be the case in\n * practice, causing the SDK to throw errors when calling\n * swRegistration.pushManager.subscribe() too soon after register(). The only\n * solution seems to be waiting for the service worker registration `state`\n * to become \"active\".\n */\nasync function waitForRegistrationActive(\n  registration: ServiceWorkerRegistration\n): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    const rejectTimeout = setTimeout(\n      () =>\n        reject(\n          new Error(\n            `Service worker not registered after ${DEFAULT_REGISTRATION_TIMEOUT} ms`\n          )\n        ),\n      DEFAULT_REGISTRATION_TIMEOUT\n    );\n    const incomingSw = registration.installing || registration.waiting;\n    if (registration.active) {\n      clearTimeout(rejectTimeout);\n      resolve();\n    } else if (incomingSw) {\n      incomingSw.onstatechange = ev => {\n        if ((ev.target as ServiceWorker)?.state === 'activated') {\n          incomingSw.onstatechange = null;\n          clearTimeout(rejectTimeout);\n          resolve();\n        }\n      };\n    } else {\n      clearTimeout(rejectTimeout);\n      reject(new Error('No incoming service worker found.'));\n    }\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\nimport { registerDefaultSw } from './registerDefaultSw';\n\nexport async function updateSwReg(\n  messaging: MessagingService,\n  swRegistration?: ServiceWorkerRegistration | undefined\n): Promise<void> {\n  if (!swRegistration && !messaging.swRegistration) {\n    await registerDefaultSw(messaging);\n  }\n\n  if (!swRegistration && !!messaging.swRegistration) {\n    return;\n  }\n\n  if (!(swRegistration instanceof ServiceWorkerRegistration)) {\n    throw ERROR_FACTORY.create(ErrorCode.INVALID_SW_REGISTRATION);\n  }\n\n  messaging.swRegistration = swRegistration;\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DEFAULT_VAPID_KEY } from '../util/constants';\nimport { MessagingService } from '../messaging-service';\n\nexport async function updateVapidKey(\n  messaging: MessagingService,\n  vapidKey?: string | undefined\n): Promise<void> {\n  if (!!vapidKey) {\n    messaging.vapidKey = vapidKey;\n  } else if (!messaging.vapidKey) {\n    messaging.vapidKey = DEFAULT_VAPID_KEY;\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\nimport { getTokenInternal } from '../internals/token-manager';\nimport { updateSwReg } from '../helpers/updateSwReg';\nimport { updateVapidKey } from '../helpers/updateVapidKey';\nimport { GetTokenOptions } from '../interfaces/public-types';\n\nexport async function getToken(\n  messaging: MessagingService,\n  options?: GetTokenOptions\n): Promise<string> {\n  if (!navigator) {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  if (Notification.permission === 'default') {\n    await Notification.requestPermission();\n  }\n\n  if (Notification.permission !== 'granted') {\n    throw ERROR_FACTORY.create(ErrorCode.PERMISSION_BLOCKED);\n  }\n\n  await updateVapidKey(messaging, options?.vapidKey);\n  await updateSwReg(messaging, options?.serviceWorkerRegistration);\n\n  return getTokenInternal(messaging);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  CONSOLE_CAMPAIGN_ID,\n  CONSOLE_CAMPAIGN_NAME,\n  CONSOLE_CAMPAIGN_TIME\n} from '../util/constants';\nimport {\n  ConsoleMessageData,\n  MessageType\n} from '../interfaces/internal-message-payload';\n\nimport { MessagingService } from '../messaging-service';\n\nexport async function logToScion(\n  messaging: MessagingService,\n  messageType: MessageType,\n  data: ConsoleMessageData\n): Promise<void> {\n  const eventType = getEventType(messageType);\n  const analytics =\n    await messaging.firebaseDependencies.analyticsProvider.get();\n  analytics.logEvent(eventType, {\n    /* eslint-disable camelcase */\n    message_id: data[CONSOLE_CAMPAIGN_ID],\n    message_name: data[CONSOLE_CAMPAIGN_NAME],\n    message_time: data[CONSOLE_CAMPAIGN_TIME],\n    message_device_time: Math.floor(Date.now() / 1000)\n    /* eslint-enable camelcase */\n  });\n}\n\nfunction getEventType(messageType: MessageType): string {\n  switch (messageType) {\n    case MessageType.NOTIFICATION_CLICKED:\n      return 'notification_open';\n    case MessageType.PUSH_RECEIVED:\n      return 'notification_foreground';\n    default:\n      throw new Error();\n  }\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  MessagePayloadInternal,\n  MessageType\n} from '../interfaces/internal-message-payload';\n\nimport { CONSOLE_CAMPAIGN_ANALYTICS_ENABLED } from '../util/constants';\nimport { MessagingService } from '../messaging-service';\nimport { externalizePayload } from '../helpers/externalizePayload';\nimport { isConsoleMessage } from '../helpers/is-console-message';\nimport { logToScion } from '../helpers/logToScion';\n\nexport async function messageEventListener(\n  messaging: MessagingService,\n  event: MessageEvent\n): Promise<void> {\n  const internalPayload = event.data as MessagePayloadInternal;\n\n  if (!internalPayload.isFirebaseMessaging) {\n    return;\n  }\n\n  if (\n    messaging.onMessageHandler &&\n    internalPayload.messageType === MessageType.PUSH_RECEIVED\n  ) {\n    if (typeof messaging.onMessageHandler === 'function') {\n      messaging.onMessageHandler(externalizePayload(internalPayload));\n    } else {\n      messaging.onMessageHandler.next(externalizePayload(internalPayload));\n    }\n  }\n\n  // Log to Scion if applicable\n  const dataPayload = internalPayload.data;\n  if (\n    isConsoleMessage(dataPayload) &&\n    dataPayload[CONSOLE_CAMPAIGN_ANALYTICS_ENABLED] === '1'\n  ) {\n    await logToScion(messaging, internalPayload.messageType!, dataPayload);\n  }\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  Component,\n  ComponentContainer,\n  ComponentType,\n  InstanceFactory\n} from '@firebase/component';\nimport {\n  onNotificationClick,\n  onPush,\n  onSubChange\n} from '../listeners/sw-listeners';\n\nimport { GetTokenOptions } from '../interfaces/public-types';\nimport { MessagingInternal } from '@firebase/messaging-interop-types';\nimport { MessagingService } from '../messaging-service';\nimport { ServiceWorkerGlobalScope } from '../util/sw-types';\nimport { _registerComponent, registerVersion } from '@firebase/app';\nimport { getToken } from '../api/getToken';\nimport { messageEventListener } from '../listeners/window-listener';\n\nimport { name, version } from '../../package.json';\n\nconst WindowMessagingFactory: InstanceFactory<'messaging'> = (\n  container: ComponentContainer\n) => {\n  const messaging = new MessagingService(\n    container.getProvider('app').getImmediate(),\n    container.getProvider('installations-internal').getImmediate(),\n    container.getProvider('analytics-internal')\n  );\n\n  navigator.serviceWorker.addEventListener('message', e =>\n    messageEventListener(messaging as MessagingService, e)\n  );\n\n  return messaging;\n};\n\nconst WindowMessagingInternalFactory: InstanceFactory<'messaging-internal'> = (\n  container: ComponentContainer\n) => {\n  const messaging = container\n    .getProvider('messaging')\n    .getImmediate() as MessagingService;\n\n  const messagingInternal: MessagingInternal = {\n    getToken: (options?: GetTokenOptions) => getToken(messaging, options)\n  };\n\n  return messagingInternal;\n};\n\ndeclare const self: ServiceWorkerGlobalScope;\nconst SwMessagingFactory: InstanceFactory<'messaging'> = (\n  container: ComponentContainer\n) => {\n  const messaging = new MessagingService(\n    container.getProvider('app').getImmediate(),\n    container.getProvider('installations-internal').getImmediate(),\n    container.getProvider('analytics-internal')\n  );\n\n  self.addEventListener('push', e => {\n    e.waitUntil(onPush(e, messaging as MessagingService));\n  });\n  self.addEventListener('pushsubscriptionchange', e => {\n    e.waitUntil(onSubChange(e, messaging as MessagingService));\n  });\n  self.addEventListener('notificationclick', e => {\n    e.waitUntil(onNotificationClick(e));\n  });\n\n  return messaging;\n};\n\nexport function registerMessagingInWindow(): void {\n  _registerComponent(\n    new Component('messaging', WindowMessagingFactory, ComponentType.PUBLIC)\n  );\n\n  _registerComponent(\n    new Component(\n      'messaging-internal',\n      WindowMessagingInternalFactory,\n      ComponentType.PRIVATE\n    )\n  );\n\n  registerVersion(name, version);\n  // BUILD_TARGET will be replaced by values like esm2017, cjs2017, etc during the compilation\n  registerVersion(name, version, '__BUILD_TARGET__');\n}\n\n/**\n * The messaging instance registered in sw is named differently than that of in client. This is\n * because both `registerMessagingInWindow` and `registerMessagingInSw` would be called in\n * `messaging-compat` and component with the same name can only be registered once.\n */\nexport function registerMessagingInSw(): void {\n  _registerComponent(\n    new Component('messaging-sw', SwMessagingFactory, ComponentType.PUBLIC)\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  areCookiesEnabled,\n  isIndexedDBAvailable,\n  validateIndexedDBOpenable\n} from '@firebase/util';\n\n/**\n * Checks if all required APIs exist in the browser.\n * @returns a Promise that resolves to a boolean.\n *\n * @public\n */\nexport async function isWindowSupported(): Promise<boolean> {\n  try {\n    // This throws if open() is unsupported, so adding it to the conditional\n    // statement below can cause an uncaught error.\n    await validateIndexedDBOpenable();\n  } catch (e) {\n    return false;\n  }\n  // firebase-js-sdk/issues/2393 reveals that idb#open in Safari iframe and Firefox private browsing\n  // might be prohibited to run. In these contexts, an error would be thrown during the messaging\n  // instantiating phase, informing the developers to import/call isSupported for special handling.\n  return (\n    typeof window !== 'undefined' &&\n    isIndexedDBAvailable() &&\n    areCookiesEnabled() &&\n    'serviceWorker' in navigator &&\n    'PushManager' in window &&\n    'Notification' in window &&\n    'fetch' in window &&\n    ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n    PushSubscription.prototype.hasOwnProperty('getKey')\n  );\n}\n\n/**\n * Checks whether all required APIs exist within SW Context\n * @returns a Promise that resolves to a boolean.\n *\n * @public\n */\nexport async function isSwSupported(): Promise<boolean> {\n  // firebase-js-sdk/issues/2393 reveals that idb#open in Safari iframe and Firefox private browsing\n  // might be prohibited to run. In these contexts, an error would be thrown during the messaging\n  // instantiating phase, informing the developers to import/call isSupported for special handling.\n  return (\n    isIndexedDBAvailable() &&\n    (await validateIndexedDBOpenable()) &&\n    'PushManager' in self &&\n    'Notification' in self &&\n    ServiceWorkerRegistration.prototype.hasOwnProperty('showNotification') &&\n    PushSubscription.prototype.hasOwnProperty('getKey')\n  );\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport { MessagingService } from '../messaging-service';\nimport { deleteTokenInternal } from '../internals/token-manager';\nimport { registerDefaultSw } from '../helpers/registerDefaultSw';\n\nexport async function deleteToken(\n  messaging: MessagingService\n): Promise<boolean> {\n  if (!navigator) {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  if (!messaging.swRegistration) {\n    await registerDefaultSw(messaging);\n  }\n\n  return deleteTokenInternal(messaging);\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nimport {\n  MessagePayload,\n  NextFn,\n  Observer,\n  Unsubscribe\n} from '../interfaces/public-types';\nimport { MessagingService } from '../messaging-service';\n\nexport function onMessage(\n  messaging: MessagingService,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  if (!navigator) {\n    throw ERROR_FACTORY.create(ErrorCode.AVAILABLE_IN_WINDOW);\n  }\n\n  messaging.onMessageHandler = nextOrObserver;\n\n  return () => {\n    messaging.onMessageHandler = null;\n  };\n}\n","/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ERROR_FACTORY, ErrorCode } from './util/errors';\nimport { FirebaseApp, _getProvider, getApp } from '@firebase/app';\nimport {\n  GetTokenOptions,\n  MessagePayload,\n  Messaging\n} from './interfaces/public-types';\nimport {\n  NextFn,\n  Observer,\n  Unsubscribe,\n  getModularInstance\n} from '@firebase/util';\nimport { isSwSupported, isWindowSupported } from './api/isSupported';\n\nimport { MessagingService } from './messaging-service';\nimport { deleteToken as _deleteToken } from './api/deleteToken';\nimport { getToken as _getToken } from './api/getToken';\nimport { onBackgroundMessage as _onBackgroundMessage } from './api/onBackgroundMessage';\nimport { onMessage as _onMessage } from './api/onMessage';\nimport { _setDeliveryMetricsExportedToBigQueryEnabled } from './api/setDeliveryMetricsExportedToBigQueryEnabled';\n\n/**\n * Retrieves a Firebase Cloud Messaging instance.\n *\n * @returns The Firebase Cloud Messaging instance associated with the provided firebase app.\n *\n * @public\n */\nexport function getMessagingInWindow(app: FirebaseApp = getApp()): Messaging {\n  // Conscious decision to make this async check non-blocking during the messaging instance\n  // initialization phase for performance consideration. An error would be thrown latter for\n  // developer's information. Developers can then choose to import and call `isSupported` for\n  // special handling.\n  isWindowSupported().then(\n    isSupported => {\n      // If `isWindowSupported()` resolved, but returned false.\n      if (!isSupported) {\n        throw ERROR_FACTORY.create(ErrorCode.UNSUPPORTED_BROWSER);\n      }\n    },\n    _ => {\n      // If `isWindowSupported()` rejected.\n      throw ERROR_FACTORY.create(ErrorCode.INDEXED_DB_UNSUPPORTED);\n    }\n  );\n  return _getProvider(getModularInstance(app), 'messaging').getImmediate();\n}\n\n/**\n * Retrieves a Firebase Cloud Messaging instance.\n *\n * @returns The Firebase Cloud Messaging instance associated with the provided firebase app.\n *\n * @public\n */\nexport function getMessagingInSw(app: FirebaseApp = getApp()): Messaging {\n  // Conscious decision to make this async check non-blocking during the messaging instance\n  // initialization phase for performance consideration. An error would be thrown latter for\n  // developer's information. Developers can then choose to import and call `isSupported` for\n  // special handling.\n  isSwSupported().then(\n    isSupported => {\n      // If `isSwSupported()` resolved, but returned false.\n      if (!isSupported) {\n        throw ERROR_FACTORY.create(ErrorCode.UNSUPPORTED_BROWSER);\n      }\n    },\n    _ => {\n      // If `isSwSupported()` rejected.\n      throw ERROR_FACTORY.create(ErrorCode.INDEXED_DB_UNSUPPORTED);\n    }\n  );\n  return _getProvider(getModularInstance(app), 'messaging-sw').getImmediate();\n}\n\n/**\n * Subscribes the {@link Messaging} instance to push notifications. Returns a Firebase Cloud\n * Messaging registration token that can be used to send push messages to that {@link Messaging}\n * instance.\n *\n * If notification permission isn't already granted, this method asks the user for permission. The\n * returned promise rejects if the user does not allow the app to show notifications.\n *\n * @param messaging - The {@link Messaging} instance.\n * @param options - Provides an optional vapid key and an optional service worker registration.\n *\n * @returns The promise resolves with an FCM registration token.\n *\n * @public\n */\nexport async function getToken(\n  messaging: Messaging,\n  options?: GetTokenOptions\n): Promise<string> {\n  messaging = getModularInstance(messaging);\n  return _getToken(messaging as MessagingService, options);\n}\n\n/**\n * Deletes the registration token associated with this {@link Messaging} instance and unsubscribes\n * the {@link Messaging} instance from the push subscription.\n *\n * @param messaging - The {@link Messaging} instance.\n *\n * @returns The promise resolves when the token has been successfully deleted.\n *\n * @public\n */\nexport function deleteToken(messaging: Messaging): Promise<boolean> {\n  messaging = getModularInstance(messaging);\n  return _deleteToken(messaging as MessagingService);\n}\n\n/**\n * When a push message is received and the user is currently on a page for your origin, the\n * message is passed to the page and an `onMessage()` event is dispatched with the payload of\n * the push message.\n *\n *\n * @param messaging - The {@link Messaging} instance.\n * @param nextOrObserver - This function, or observer object with `next` defined,\n *     is called when a message is received and the user is currently viewing your page.\n * @returns To stop listening for messages execute this returned function.\n *\n * @public\n */\nexport function onMessage(\n  messaging: Messaging,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  messaging = getModularInstance(messaging);\n  return _onMessage(messaging as MessagingService, nextOrObserver);\n}\n\n/**\n * Called when a message is received while the app is in the background. An app is considered to be\n * in the background if no active window is displayed.\n *\n * @param messaging - The {@link Messaging} instance.\n * @param nextOrObserver - This function, or observer object with `next` defined, is called when a\n * message is received and the app is currently in the background.\n *\n * @returns To stop listening for messages execute this returned function\n *\n * @public\n */\nexport function onBackgroundMessage(\n  messaging: Messaging,\n  nextOrObserver: NextFn<MessagePayload> | Observer<MessagePayload>\n): Unsubscribe {\n  messaging = getModularInstance(messaging);\n  return _onBackgroundMessage(messaging as MessagingService, nextOrObserver);\n}\n\n/**\n * Enables or disables Firebase Cloud Messaging message delivery metrics export to BigQuery. By\n * default, message delivery metrics are not exported to BigQuery. Use this method to enable or\n * disable the export at runtime.\n *\n * @param messaging - The `FirebaseMessaging` instance.\n * @param enable - Whether Firebase Cloud Messaging should export message delivery metrics to\n * BigQuery.\n *\n * @public\n */\nexport function experimentalSetDeliveryMetricsExportedToBigQueryEnabled(\n  messaging: Messaging,\n  enable: boolean\n): void {\n  messaging = getModularInstance(messaging);\n  return _setDeliveryMetricsExportedToBigQueryEnabled(messaging, enable);\n}\n","/**\n * The Firebase Cloud Messaging Web SDK.\n * This SDK does not work in a Node.js environment.\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2017 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport '@firebase/installations';\n\nimport { Messaging } from './interfaces/public-types';\nimport { registerMessagingInWindow } from './helpers/register';\n\nexport {\n  getToken,\n  deleteToken,\n  onMessage,\n  getMessagingInWindow as getMessaging\n} from './api';\nexport { isWindowSupported as isSupported } from './api/isSupported';\nexport * from './interfaces/public-types';\n\ndeclare module '@firebase/component' {\n  interface NameServiceMapping {\n    'messaging': Messaging;\n  }\n}\n\nregisterMessagingInWindow();\n",null,"/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { version } from '../../package.json';\n\nexport const PENDING_TIMEOUT_MS = 10000;\n\nexport const PACKAGE_VERSION = `w:${version}`;\nexport const INTERNAL_AUTH_VERSION = 'FIS_v2';\n\nexport const INSTALLATIONS_API_URL =\n  'https://firebaseinstallations.googleapis.com/v1';\n\nexport const TOKEN_EXPIRATION_BUFFER = 60 * 60 * 1000; // One hour\n\nexport const SERVICE = 'installations';\nexport const SERVICE_NAME = 'Installations';\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { ErrorFactory, FirebaseError } from '@firebase/util';\nimport { SERVICE, SERVICE_NAME } from './constants';\n\nexport const enum ErrorCode {\n  MISSING_APP_CONFIG_VALUES = 'missing-app-config-values',\n  NOT_REGISTERED = 'not-registered',\n  INSTALLATION_NOT_FOUND = 'installation-not-found',\n  REQUEST_FAILED = 'request-failed',\n  APP_OFFLINE = 'app-offline',\n  DELETE_PENDING_REGISTRATION = 'delete-pending-registration'\n}\n\nconst ERROR_DESCRIPTION_MAP: { readonly [key in ErrorCode]: string } = {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]:\n    'Missing App configuration value: \"{$valueName}\"',\n  [ErrorCode.NOT_REGISTERED]: 'Firebase Installation is not registered.',\n  [ErrorCode.INSTALLATION_NOT_FOUND]: 'Firebase Installation not found.',\n  [ErrorCode.REQUEST_FAILED]:\n    '{$requestName} request failed with error \"{$serverCode} {$serverStatus}: {$serverMessage}\"',\n  [ErrorCode.APP_OFFLINE]: 'Could not process request. Application offline.',\n  [ErrorCode.DELETE_PENDING_REGISTRATION]:\n    \"Can't delete installation while there is a pending registration request.\"\n};\n\ninterface ErrorParams {\n  [ErrorCode.MISSING_APP_CONFIG_VALUES]: {\n    valueName: string;\n  };\n  [ErrorCode.REQUEST_FAILED]: {\n    requestName: string;\n    [index: string]: string | number; // to make TypeScript 3.8 happy\n  } & ServerErrorData;\n}\n\nexport const ERROR_FACTORY = new ErrorFactory<ErrorCode, ErrorParams>(\n  SERVICE,\n  SERVICE_NAME,\n  ERROR_DESCRIPTION_MAP\n);\n\nexport interface ServerErrorData {\n  serverCode: number;\n  serverMessage: string;\n  serverStatus: string;\n}\n\nexport type ServerError = FirebaseError & { customData: ServerErrorData };\n\n/** Returns true if error is a FirebaseError that is based on an error from the server. */\nexport function isServerError(error: unknown): error is ServerError {\n  return (\n    error instanceof FirebaseError &&\n    error.code.includes(ErrorCode.REQUEST_FAILED)\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseError } from '@firebase/util';\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport {\n  INSTALLATIONS_API_URL,\n  INTERNAL_AUTH_VERSION\n} from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { AppConfig } from '../interfaces/installation-impl';\n\nexport function getInstallationsEndpoint({ projectId }: AppConfig): string {\n  return `${INSTALLATIONS_API_URL}/projects/${projectId}/installations`;\n}\n\nexport function extractAuthTokenInfoFromResponse(\n  response: GenerateAuthTokenResponse\n): CompletedAuthToken {\n  return {\n    token: response.token,\n    requestStatus: RequestStatus.COMPLETED,\n    expiresIn: getExpiresInFromResponseExpiresIn(response.expiresIn),\n    creationTime: Date.now()\n  };\n}\n\nexport async function getErrorFromResponse(\n  requestName: string,\n  response: Response\n): Promise<FirebaseError> {\n  const responseJson: ErrorResponse = await response.json();\n  const errorData = responseJson.error;\n  return ERROR_FACTORY.create(ErrorCode.REQUEST_FAILED, {\n    requestName,\n    serverCode: errorData.code,\n    serverMessage: errorData.message,\n    serverStatus: errorData.status\n  });\n}\n\nexport function getHeaders({ apiKey }: AppConfig): Headers {\n  return new Headers({\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n    'x-goog-api-key': apiKey\n  });\n}\n\nexport function getHeadersWithAuth(\n  appConfig: AppConfig,\n  { refreshToken }: RegisteredInstallationEntry\n): Headers {\n  const headers = getHeaders(appConfig);\n  headers.append('Authorization', getAuthorizationHeader(refreshToken));\n  return headers;\n}\n\nexport interface ErrorResponse {\n  error: {\n    code: number;\n    message: string;\n    status: string;\n  };\n}\n\n/**\n * Calls the passed in fetch wrapper and returns the response.\n * If the returned response has a status of 5xx, re-runs the function once and\n * returns the response.\n */\nexport async function retryIfServerError(\n  fn: () => Promise<Response>\n): Promise<Response> {\n  const result = await fn();\n\n  if (result.status >= 500 && result.status < 600) {\n    // Internal Server Error. Retry request.\n    return fn();\n  }\n\n  return result;\n}\n\nfunction getExpiresInFromResponseExpiresIn(responseExpiresIn: string): number {\n  // This works because the server will never respond with fractions of a second.\n  return Number(responseExpiresIn.replace('s', '000'));\n}\n\nfunction getAuthorizationHeader(refreshToken: string): string {\n  return `${INTERNAL_AUTH_VERSION} ${refreshToken}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { CreateInstallationResponse } from '../interfaces/api-response';\nimport {\n  InProgressInstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { INTERNAL_AUTH_VERSION, PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeaders,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\n\nexport async function createInstallationRequest(\n  { appConfig, heartbeatServiceProvider }: FirebaseInstallationsImpl,\n  { fid }: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  const endpoint = getInstallationsEndpoint(appConfig);\n\n  const headers = getHeaders(appConfig);\n\n  // If heartbeat service exists, add the heartbeat string to the header.\n  const heartbeatService = heartbeatServiceProvider.getImmediate({\n    optional: true\n  });\n  if (heartbeatService) {\n    const heartbeatsHeader = await heartbeatService.getHeartbeatsHeader();\n    if (heartbeatsHeader) {\n      headers.append('x-firebase-client', heartbeatsHeader);\n    }\n  }\n\n  const body = {\n    fid,\n    authVersion: INTERNAL_AUTH_VERSION,\n    appId: appConfig.appId,\n    sdkVersion: PACKAGE_VERSION\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: CreateInstallationResponse = await response.json();\n    const registeredInstallationEntry: RegisteredInstallationEntry = {\n      fid: responseValue.fid || fid,\n      registrationStatus: RequestStatus.COMPLETED,\n      refreshToken: responseValue.refreshToken,\n      authToken: extractAuthTokenInfoFromResponse(responseValue.authToken)\n    };\n    return registeredInstallationEntry;\n  } else {\n    throw await getErrorFromResponse('Create Installation', response);\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Returns a promise that resolves after given time passes. */\nexport function sleep(ms: number): Promise<void> {\n  return new Promise<void>(resolve => {\n    setTimeout(resolve, ms);\n  });\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport function bufferToBase64UrlSafe(array: Uint8Array): string {\n  const b64 = btoa(String.fromCharCode(...array));\n  return b64.replace(/\\+/g, '-').replace(/\\//g, '_');\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { bufferToBase64UrlSafe } from './buffer-to-base64-url-safe';\n\nexport const VALID_FID_PATTERN = /^[cdef][\\w-]{21}$/;\nexport const INVALID_FID = '';\n\n/**\n * Generates a new FID using random values from Web Crypto API.\n * Returns an empty string if FID generation fails for any reason.\n */\nexport function generateFid(): string {\n  try {\n    // A valid FID has exactly 22 base64 characters, which is 132 bits, or 16.5\n    // bytes. our implementation generates a 17 byte array instead.\n    const fidByteArray = new Uint8Array(17);\n    const crypto =\n      self.crypto || (self as unknown as { msCrypto: Crypto }).msCrypto;\n    crypto.getRandomValues(fidByteArray);\n\n    // Replace the first 4 random bits with the constant FID header of 0b0111.\n    fidByteArray[0] = 0b01110000 + (fidByteArray[0] % 0b00010000);\n\n    const fid = encode(fidByteArray);\n\n    return VALID_FID_PATTERN.test(fid) ? fid : INVALID_FID;\n  } catch {\n    // FID generation errored\n    return INVALID_FID;\n  }\n}\n\n/** Converts a FID Uint8Array to a base64 string representation. */\nfunction encode(fidByteArray: Uint8Array): string {\n  const b64String = bufferToBase64UrlSafe(fidByteArray);\n\n  // Remove the 23rd character that was added because of the extra 4 bits at the\n  // end of our 17 byte array, and the '=' padding.\n  return b64String.substr(0, 22);\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig } from '../interfaces/installation-impl';\n\n/** Returns a string key that can be used to identify the app. */\nexport function getKey(appConfig: AppConfig): string {\n  return `${appConfig.appName}!${appConfig.appId}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getKey } from '../util/get-key';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { IdChangeCallbackFn } from '../api';\n\nconst fidChangeCallbacks: Map<string, Set<IdChangeCallbackFn>> = new Map();\n\n/**\n * Calls the onIdChange callbacks with the new FID value, and broadcasts the\n * change to other tabs.\n */\nexport function fidChanged(appConfig: AppConfig, fid: string): void {\n  const key = getKey(appConfig);\n\n  callFidChangeCallbacks(key, fid);\n  broadcastFidChange(key, fid);\n}\n\nexport function addCallback(\n  appConfig: AppConfig,\n  callback: IdChangeCallbackFn\n): void {\n  // Open the broadcast channel if it's not already open,\n  // to be able to listen to change events from other tabs.\n  getBroadcastChannel();\n\n  const key = getKey(appConfig);\n\n  let callbackSet = fidChangeCallbacks.get(key);\n  if (!callbackSet) {\n    callbackSet = new Set();\n    fidChangeCallbacks.set(key, callbackSet);\n  }\n  callbackSet.add(callback);\n}\n\nexport function removeCallback(\n  appConfig: AppConfig,\n  callback: IdChangeCallbackFn\n): void {\n  const key = getKey(appConfig);\n\n  const callbackSet = fidChangeCallbacks.get(key);\n\n  if (!callbackSet) {\n    return;\n  }\n\n  callbackSet.delete(callback);\n  if (callbackSet.size === 0) {\n    fidChangeCallbacks.delete(key);\n  }\n\n  // Close broadcast channel if there are no more callbacks.\n  closeBroadcastChannel();\n}\n\nfunction callFidChangeCallbacks(key: string, fid: string): void {\n  const callbacks = fidChangeCallbacks.get(key);\n  if (!callbacks) {\n    return;\n  }\n\n  for (const callback of callbacks) {\n    callback(fid);\n  }\n}\n\nfunction broadcastFidChange(key: string, fid: string): void {\n  const channel = getBroadcastChannel();\n  if (channel) {\n    channel.postMessage({ key, fid });\n  }\n  closeBroadcastChannel();\n}\n\nlet broadcastChannel: BroadcastChannel | null = null;\n/** Opens and returns a BroadcastChannel if it is supported by the browser. */\nfunction getBroadcastChannel(): BroadcastChannel | null {\n  if (!broadcastChannel && 'BroadcastChannel' in self) {\n    broadcastChannel = new BroadcastChannel('[Firebase] FID Change');\n    broadcastChannel.onmessage = e => {\n      callFidChangeCallbacks(e.data.key, e.data.fid);\n    };\n  }\n  return broadcastChannel;\n}\n\nfunction closeBroadcastChannel(): void {\n  if (fidChangeCallbacks.size === 0 && broadcastChannel) {\n    broadcastChannel.close();\n    broadcastChannel = null;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { DBSchema, IDBPDatabase, openDB } from 'idb';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { InstallationEntry } from '../interfaces/installation-entry';\nimport { getKey } from '../util/get-key';\nimport { fidChanged } from './fid-changed';\n\nconst DATABASE_NAME = 'firebase-installations-database';\nconst DATABASE_VERSION = 1;\nconst OBJECT_STORE_NAME = 'firebase-installations-store';\n\ninterface InstallationsDB extends DBSchema {\n  'firebase-installations-store': {\n    key: string;\n    value: InstallationEntry | undefined;\n  };\n}\n\nlet dbPromise: Promise<IDBPDatabase<InstallationsDB>> | null = null;\nfunction getDbPromise(): Promise<IDBPDatabase<InstallationsDB>> {\n  if (!dbPromise) {\n    dbPromise = openDB(DATABASE_NAME, DATABASE_VERSION, {\n      upgrade: (db, oldVersion) => {\n        // We don't use 'break' in this switch statement, the fall-through\n        // behavior is what we want, because if there are multiple versions between\n        // the old version and the current version, we want ALL the migrations\n        // that correspond to those versions to run, not only the last one.\n        // eslint-disable-next-line default-case\n        switch (oldVersion) {\n          case 0:\n            db.createObjectStore(OBJECT_STORE_NAME);\n        }\n      }\n    });\n  }\n  return dbPromise;\n}\n\n/** Gets record(s) from the objectStore that match the given key. */\nexport async function get(\n  appConfig: AppConfig\n): Promise<InstallationEntry | undefined> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  return db\n    .transaction(OBJECT_STORE_NAME)\n    .objectStore(OBJECT_STORE_NAME)\n    .get(key) as Promise<InstallationEntry>;\n}\n\n/** Assigns or overwrites the record for the given key with the given value. */\nexport async function set<ValueType extends InstallationEntry>(\n  appConfig: AppConfig,\n  value: ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const objectStore = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue = (await objectStore.get(key)) as InstallationEntry;\n  await objectStore.put(value, key);\n  await tx.done;\n\n  if (!oldValue || oldValue.fid !== value.fid) {\n    fidChanged(appConfig, value.fid);\n  }\n\n  return value;\n}\n\n/** Removes record(s) from the objectStore that match the given key. */\nexport async function remove(appConfig: AppConfig): Promise<void> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).delete(key);\n  await tx.done;\n}\n\n/**\n * Atomically updates a record with the result of updateFn, which gets\n * called with the current value. If newValue is undefined, the record is\n * deleted instead.\n * @return Updated value\n */\nexport async function update<ValueType extends InstallationEntry | undefined>(\n  appConfig: AppConfig,\n  updateFn: (previousValue: InstallationEntry | undefined) => ValueType\n): Promise<ValueType> {\n  const key = getKey(appConfig);\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  const store = tx.objectStore(OBJECT_STORE_NAME);\n  const oldValue: InstallationEntry | undefined = (await store.get(\n    key\n  )) as InstallationEntry;\n  const newValue = updateFn(oldValue);\n\n  if (newValue === undefined) {\n    await store.delete(key);\n  } else {\n    await store.put(newValue, key);\n  }\n  await tx.done;\n\n  if (newValue && (!oldValue || oldValue.fid !== newValue.fid)) {\n    fidChanged(appConfig, newValue.fid);\n  }\n\n  return newValue;\n}\n\nexport async function clear(): Promise<void> {\n  const db = await getDbPromise();\n  const tx = db.transaction(OBJECT_STORE_NAME, 'readwrite');\n  await tx.objectStore(OBJECT_STORE_NAME).clear();\n  await tx.done;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createInstallationRequest } from '../functions/create-installation-request';\nimport {\n  AppConfig,\n  FirebaseInstallationsImpl\n} from '../interfaces/installation-impl';\nimport {\n  InProgressInstallationEntry,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { generateFid, INVALID_FID } from './generate-fid';\nimport { remove, set, update } from './idb-manager';\n\nexport interface InstallationEntryWithRegistrationPromise {\n  installationEntry: InstallationEntry;\n  /** Exist iff the installationEntry is not registered. */\n  registrationPromise?: Promise<RegisteredInstallationEntry>;\n}\n\n/**\n * Updates and returns the InstallationEntry from the database.\n * Also triggers a registration request if it is necessary and possible.\n */\nexport async function getInstallationEntry(\n  installations: FirebaseInstallationsImpl\n): Promise<InstallationEntryWithRegistrationPromise> {\n  let registrationPromise: Promise<RegisteredInstallationEntry> | undefined;\n\n  const installationEntry = await update(installations.appConfig, oldEntry => {\n    const installationEntry = updateOrCreateInstallationEntry(oldEntry);\n    const entryWithPromise = triggerRegistrationIfNecessary(\n      installations,\n      installationEntry\n    );\n    registrationPromise = entryWithPromise.registrationPromise;\n    return entryWithPromise.installationEntry;\n  });\n\n  if (installationEntry.fid === INVALID_FID) {\n    // FID generation failed. Waiting for the FID from the server.\n    return { installationEntry: await registrationPromise! };\n  }\n\n  return {\n    installationEntry,\n    registrationPromise\n  };\n}\n\n/**\n * Creates a new Installation Entry if one does not exist.\n * Also clears timed out pending requests.\n */\nfunction updateOrCreateInstallationEntry(\n  oldEntry: InstallationEntry | undefined\n): InstallationEntry {\n  const entry: InstallationEntry = oldEntry || {\n    fid: generateFid(),\n    registrationStatus: RequestStatus.NOT_STARTED\n  };\n\n  return clearTimedOutRequest(entry);\n}\n\n/**\n * If the Firebase Installation is not registered yet, this will trigger the\n * registration and return an InProgressInstallationEntry.\n *\n * If registrationPromise does not exist, the installationEntry is guaranteed\n * to be registered.\n */\nfunction triggerRegistrationIfNecessary(\n  installations: FirebaseInstallationsImpl,\n  installationEntry: InstallationEntry\n): InstallationEntryWithRegistrationPromise {\n  if (installationEntry.registrationStatus === RequestStatus.NOT_STARTED) {\n    if (!navigator.onLine) {\n      // Registration required but app is offline.\n      const registrationPromiseWithError = Promise.reject(\n        ERROR_FACTORY.create(ErrorCode.APP_OFFLINE)\n      );\n      return {\n        installationEntry,\n        registrationPromise: registrationPromiseWithError\n      };\n    }\n\n    // Try registering. Change status to IN_PROGRESS.\n    const inProgressEntry: InProgressInstallationEntry = {\n      fid: installationEntry.fid,\n      registrationStatus: RequestStatus.IN_PROGRESS,\n      registrationTime: Date.now()\n    };\n    const registrationPromise = registerInstallation(\n      installations,\n      inProgressEntry\n    );\n    return { installationEntry: inProgressEntry, registrationPromise };\n  } else if (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS\n  ) {\n    return {\n      installationEntry,\n      registrationPromise: waitUntilFidRegistration(installations)\n    };\n  } else {\n    return { installationEntry };\n  }\n}\n\n/** This will be executed only once for each new Firebase Installation. */\nasync function registerInstallation(\n  installations: FirebaseInstallationsImpl,\n  installationEntry: InProgressInstallationEntry\n): Promise<RegisteredInstallationEntry> {\n  try {\n    const registeredInstallationEntry = await createInstallationRequest(\n      installations,\n      installationEntry\n    );\n    return set(installations.appConfig, registeredInstallationEntry);\n  } catch (e) {\n    if (isServerError(e) && e.customData.serverCode === 409) {\n      // Server returned a \"FID cannot be used\" error.\n      // Generate a new ID next time.\n      await remove(installations.appConfig);\n    } else {\n      // Registration failed. Set FID as not registered.\n      await set(installations.appConfig, {\n        fid: installationEntry.fid,\n        registrationStatus: RequestStatus.NOT_STARTED\n      });\n    }\n    throw e;\n  }\n}\n\n/** Call if FID registration is pending in another request. */\nasync function waitUntilFidRegistration(\n  installations: FirebaseInstallationsImpl\n): Promise<RegisteredInstallationEntry> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry: InstallationEntry = await updateInstallationRequest(\n    installations.appConfig\n  );\n  while (entry.registrationStatus === RequestStatus.IN_PROGRESS) {\n    // createInstallation request still in progress.\n    await sleep(100);\n\n    entry = await updateInstallationRequest(installations.appConfig);\n  }\n\n  if (entry.registrationStatus === RequestStatus.NOT_STARTED) {\n    // The request timed out or failed in a different call. Try again.\n    const { installationEntry, registrationPromise } =\n      await getInstallationEntry(installations);\n\n    if (registrationPromise) {\n      return registrationPromise;\n    } else {\n      // if there is no registrationPromise, entry is registered.\n      return installationEntry as RegisteredInstallationEntry;\n    }\n  }\n\n  return entry;\n}\n\n/**\n * Called only if there is a CreateInstallation request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * CreateInstallation request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateInstallationRequest(\n  appConfig: AppConfig\n): Promise<InstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!oldEntry) {\n      throw ERROR_FACTORY.create(ErrorCode.INSTALLATION_NOT_FOUND);\n    }\n    return clearTimedOutRequest(oldEntry);\n  });\n}\n\nfunction clearTimedOutRequest(entry: InstallationEntry): InstallationEntry {\n  if (hasInstallationRequestTimedOut(entry)) {\n    return {\n      fid: entry.fid,\n      registrationStatus: RequestStatus.NOT_STARTED\n    };\n  }\n\n  return entry;\n}\n\nfunction hasInstallationRequestTimedOut(\n  installationEntry: InstallationEntry\n): boolean {\n  return (\n    installationEntry.registrationStatus === RequestStatus.IN_PROGRESS &&\n    installationEntry.registrationTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { GenerateAuthTokenResponse } from '../interfaces/api-response';\nimport {\n  CompletedAuthToken,\n  RegisteredInstallationEntry\n} from '../interfaces/installation-entry';\nimport { PACKAGE_VERSION } from '../util/constants';\nimport {\n  extractAuthTokenInfoFromResponse,\n  getErrorFromResponse,\n  getHeadersWithAuth,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\nimport {\n  FirebaseInstallationsImpl,\n  AppConfig\n} from '../interfaces/installation-impl';\n\nexport async function generateAuthTokenRequest(\n  { appConfig, heartbeatServiceProvider }: FirebaseInstallationsImpl,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  const endpoint = getGenerateAuthTokenEndpoint(appConfig, installationEntry);\n\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n\n  // If heartbeat service exists, add the heartbeat string to the header.\n  const heartbeatService = heartbeatServiceProvider.getImmediate({\n    optional: true\n  });\n  if (heartbeatService) {\n    const heartbeatsHeader = await heartbeatService.getHeartbeatsHeader();\n    if (heartbeatsHeader) {\n      headers.append('x-firebase-client', heartbeatsHeader);\n    }\n  }\n\n  const body = {\n    installation: {\n      sdkVersion: PACKAGE_VERSION,\n      appId: appConfig.appId\n    }\n  };\n\n  const request: RequestInit = {\n    method: 'POST',\n    headers,\n    body: JSON.stringify(body)\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (response.ok) {\n    const responseValue: GenerateAuthTokenResponse = await response.json();\n    const completedAuthToken: CompletedAuthToken =\n      extractAuthTokenInfoFromResponse(responseValue);\n    return completedAuthToken;\n  } else {\n    throw await getErrorFromResponse('Generate Auth Token', response);\n  }\n}\n\nfunction getGenerateAuthTokenEndpoint(\n  appConfig: AppConfig,\n  { fid }: RegisteredInstallationEntry\n): string {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}/authTokens:generate`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { generateAuthTokenRequest } from '../functions/generate-auth-token-request';\nimport {\n  AppConfig,\n  FirebaseInstallationsImpl\n} from '../interfaces/installation-impl';\nimport {\n  AuthToken,\n  CompletedAuthToken,\n  InProgressAuthToken,\n  InstallationEntry,\n  RegisteredInstallationEntry,\n  RequestStatus\n} from '../interfaces/installation-entry';\nimport { PENDING_TIMEOUT_MS, TOKEN_EXPIRATION_BUFFER } from '../util/constants';\nimport { ERROR_FACTORY, ErrorCode, isServerError } from '../util/errors';\nimport { sleep } from '../util/sleep';\nimport { remove, set, update } from './idb-manager';\n\n/**\n * Returns a valid authentication token for the installation. Generates a new\n * token if one doesn't exist, is expired or about to expire.\n *\n * Should only be called if the Firebase Installation is registered.\n */\nexport async function refreshAuthToken(\n  installations: FirebaseInstallationsImpl,\n  forceRefresh = false\n): Promise<CompletedAuthToken> {\n  let tokenPromise: Promise<CompletedAuthToken> | undefined;\n  const entry = await update(installations.appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (!forceRefresh && isAuthTokenValid(oldAuthToken)) {\n      // There is a valid token in the DB.\n      return oldEntry;\n    } else if (oldAuthToken.requestStatus === RequestStatus.IN_PROGRESS) {\n      // There already is a token request in progress.\n      tokenPromise = waitUntilAuthTokenRequest(installations, forceRefresh);\n      return oldEntry;\n    } else {\n      // No token or token expired.\n      if (!navigator.onLine) {\n        throw ERROR_FACTORY.create(ErrorCode.APP_OFFLINE);\n      }\n\n      const inProgressEntry = makeAuthTokenRequestInProgressEntry(oldEntry);\n      tokenPromise = fetchAuthTokenFromServer(installations, inProgressEntry);\n      return inProgressEntry;\n    }\n  });\n\n  const authToken = tokenPromise\n    ? await tokenPromise\n    : (entry.authToken as CompletedAuthToken);\n  return authToken;\n}\n\n/**\n * Call only if FID is registered and Auth Token request is in progress.\n *\n * Waits until the current pending request finishes. If the request times out,\n * tries once in this thread as well.\n */\nasync function waitUntilAuthTokenRequest(\n  installations: FirebaseInstallationsImpl,\n  forceRefresh: boolean\n): Promise<CompletedAuthToken> {\n  // Unfortunately, there is no way of reliably observing when a value in\n  // IndexedDB changes (yet, see https://github.com/WICG/indexed-db-observers),\n  // so we need to poll.\n\n  let entry = await updateAuthTokenRequest(installations.appConfig);\n  while (entry.authToken.requestStatus === RequestStatus.IN_PROGRESS) {\n    // generateAuthToken still in progress.\n    await sleep(100);\n\n    entry = await updateAuthTokenRequest(installations.appConfig);\n  }\n\n  const authToken = entry.authToken;\n  if (authToken.requestStatus === RequestStatus.NOT_STARTED) {\n    // The request timed out or failed in a different call. Try again.\n    return refreshAuthToken(installations, forceRefresh);\n  } else {\n    return authToken;\n  }\n}\n\n/**\n * Called only if there is a GenerateAuthToken request in progress.\n *\n * Updates the InstallationEntry in the DB based on the status of the\n * GenerateAuthToken request.\n *\n * Returns the updated InstallationEntry.\n */\nfunction updateAuthTokenRequest(\n  appConfig: AppConfig\n): Promise<RegisteredInstallationEntry> {\n  return update(appConfig, oldEntry => {\n    if (!isEntryRegistered(oldEntry)) {\n      throw ERROR_FACTORY.create(ErrorCode.NOT_REGISTERED);\n    }\n\n    const oldAuthToken = oldEntry.authToken;\n    if (hasAuthTokenRequestTimedOut(oldAuthToken)) {\n      return {\n        ...oldEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n    }\n\n    return oldEntry;\n  });\n}\n\nasync function fetchAuthTokenFromServer(\n  installations: FirebaseInstallationsImpl,\n  installationEntry: RegisteredInstallationEntry\n): Promise<CompletedAuthToken> {\n  try {\n    const authToken = await generateAuthTokenRequest(\n      installations,\n      installationEntry\n    );\n    const updatedInstallationEntry: RegisteredInstallationEntry = {\n      ...installationEntry,\n      authToken\n    };\n    await set(installations.appConfig, updatedInstallationEntry);\n    return authToken;\n  } catch (e) {\n    if (\n      isServerError(e) &&\n      (e.customData.serverCode === 401 || e.customData.serverCode === 404)\n    ) {\n      // Server returned a \"FID not found\" or a \"Invalid authentication\" error.\n      // Generate a new ID next time.\n      await remove(installations.appConfig);\n    } else {\n      const updatedInstallationEntry: RegisteredInstallationEntry = {\n        ...installationEntry,\n        authToken: { requestStatus: RequestStatus.NOT_STARTED }\n      };\n      await set(installations.appConfig, updatedInstallationEntry);\n    }\n    throw e;\n  }\n}\n\nfunction isEntryRegistered(\n  installationEntry: InstallationEntry | undefined\n): installationEntry is RegisteredInstallationEntry {\n  return (\n    installationEntry !== undefined &&\n    installationEntry.registrationStatus === RequestStatus.COMPLETED\n  );\n}\n\nfunction isAuthTokenValid(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.COMPLETED &&\n    !isAuthTokenExpired(authToken)\n  );\n}\n\nfunction isAuthTokenExpired(authToken: CompletedAuthToken): boolean {\n  const now = Date.now();\n  return (\n    now < authToken.creationTime ||\n    authToken.creationTime + authToken.expiresIn < now + TOKEN_EXPIRATION_BUFFER\n  );\n}\n\n/** Returns an updated InstallationEntry with an InProgressAuthToken. */\nfunction makeAuthTokenRequestInProgressEntry(\n  oldEntry: RegisteredInstallationEntry\n): RegisteredInstallationEntry {\n  const inProgressAuthToken: InProgressAuthToken = {\n    requestStatus: RequestStatus.IN_PROGRESS,\n    requestTime: Date.now()\n  };\n  return {\n    ...oldEntry,\n    authToken: inProgressAuthToken\n  };\n}\n\nfunction hasAuthTokenRequestTimedOut(authToken: AuthToken): boolean {\n  return (\n    authToken.requestStatus === RequestStatus.IN_PROGRESS &&\n    authToken.requestTime + PENDING_TIMEOUT_MS < Date.now()\n  );\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { Installations } from '../interfaces/public-types';\n\n/**\n * Creates a Firebase Installation if there isn't one for the app and\n * returns the Installation ID.\n * @param installations - The `Installations` instance.\n *\n * @public\n */\nexport async function getId(installations: Installations): Promise<string> {\n  const installationsImpl = installations as FirebaseInstallationsImpl;\n  const { installationEntry, registrationPromise } = await getInstallationEntry(\n    installationsImpl\n  );\n\n  if (registrationPromise) {\n    registrationPromise.catch(console.error);\n  } else {\n    // If the installation is already registered, update the authentication\n    // token if needed.\n    refreshAuthToken(installationsImpl).catch(console.error);\n  }\n\n  return installationEntry.fid;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getInstallationEntry } from '../helpers/get-installation-entry';\nimport { refreshAuthToken } from '../helpers/refresh-auth-token';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { Installations } from '../interfaces/public-types';\n\n/**\n * Returns a Firebase Installations auth token, identifying the current\n * Firebase Installation.\n * @param installations - The `Installations` instance.\n * @param forceRefresh - Force refresh regardless of token expiration.\n *\n * @public\n */\nexport async function getToken(\n  installations: Installations,\n  forceRefresh = false\n): Promise<string> {\n  const installationsImpl = installations as FirebaseInstallationsImpl;\n  await completeInstallationRegistration(installationsImpl);\n\n  // At this point we either have a Registered Installation in the DB, or we've\n  // already thrown an error.\n  const authToken = await refreshAuthToken(installationsImpl, forceRefresh);\n  return authToken.token;\n}\n\nasync function completeInstallationRegistration(\n  installations: FirebaseInstallationsImpl\n): Promise<void> {\n  const { registrationPromise } = await getInstallationEntry(installations);\n\n  if (registrationPromise) {\n    // A createInstallation request is in progress. Wait until it finishes.\n    await registrationPromise;\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { RegisteredInstallationEntry } from '../interfaces/installation-entry';\nimport {\n  getErrorFromResponse,\n  getHeadersWithAuth,\n  getInstallationsEndpoint,\n  retryIfServerError\n} from './common';\n\nexport async function deleteInstallationRequest(\n  appConfig: AppConfig,\n  installationEntry: RegisteredInstallationEntry\n): Promise<void> {\n  const endpoint = getDeleteEndpoint(appConfig, installationEntry);\n\n  const headers = getHeadersWithAuth(appConfig, installationEntry);\n  const request: RequestInit = {\n    method: 'DELETE',\n    headers\n  };\n\n  const response = await retryIfServerError(() => fetch(endpoint, request));\n  if (!response.ok) {\n    throw await getErrorFromResponse('Delete Installation', response);\n  }\n}\n\nfunction getDeleteEndpoint(\n  appConfig: AppConfig,\n  { fid }: RegisteredInstallationEntry\n): string {\n  return `${getInstallationsEndpoint(appConfig)}/${fid}`;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { deleteInstallationRequest } from '../functions/delete-installation-request';\nimport { remove, update } from '../helpers/idb-manager';\nimport { RequestStatus } from '../interfaces/installation-entry';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { Installations } from '../interfaces/public-types';\n\n/**\n * Deletes the Firebase Installation and all associated data.\n * @param installations - The `Installations` instance.\n *\n * @public\n */\nexport async function deleteInstallations(\n  installations: Installations\n): Promise<void> {\n  const { appConfig } = installations as FirebaseInstallationsImpl;\n\n  const entry = await update(appConfig, oldEntry => {\n    if (oldEntry && oldEntry.registrationStatus === RequestStatus.NOT_STARTED) {\n      // Delete the unregistered entry without sending a deleteInstallation request.\n      return undefined;\n    }\n    return oldEntry;\n  });\n\n  if (entry) {\n    if (entry.registrationStatus === RequestStatus.IN_PROGRESS) {\n      // Can't delete while trying to register.\n      throw ERROR_FACTORY.create(ErrorCode.DELETE_PENDING_REGISTRATION);\n    } else if (entry.registrationStatus === RequestStatus.COMPLETED) {\n      if (!navigator.onLine) {\n        throw ERROR_FACTORY.create(ErrorCode.APP_OFFLINE);\n      } else {\n        await deleteInstallationRequest(appConfig, entry);\n        await remove(appConfig);\n      }\n    }\n  }\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { addCallback, removeCallback } from '../helpers/fid-changed';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { Installations } from '../interfaces/public-types';\n\n/**\n * An user defined callback function that gets called when Installations ID changes.\n *\n * @public\n */\nexport type IdChangeCallbackFn = (installationId: string) => void;\n/**\n * Unsubscribe a callback function previously added via {@link IdChangeCallbackFn}.\n *\n * @public\n */\nexport type IdChangeUnsubscribeFn = () => void;\n\n/**\n * Sets a new callback that will get called when Installation ID changes.\n * Returns an unsubscribe function that will remove the callback when called.\n * @param installations - The `Installations` instance.\n * @param callback - The callback function that is invoked when FID changes.\n * @returns A function that can be called to unsubscribe.\n *\n * @public\n */\nexport function onIdChange(\n  installations: Installations,\n  callback: IdChangeCallbackFn\n): IdChangeUnsubscribeFn {\n  const { appConfig } = installations as FirebaseInstallationsImpl;\n\n  addCallback(appConfig, callback);\n  return () => {\n    removeCallback(appConfig, callback);\n  };\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, getApp, _getProvider } from '@firebase/app';\nimport { Installations } from '../interfaces/public-types';\n\n/**\n * Returns an instance of {@link Installations} associated with the given\n * {@link @firebase/app#FirebaseApp} instance.\n * @param app - The {@link @firebase/app#FirebaseApp} instance.\n *\n * @public\n */\nexport function getInstallations(app: FirebaseApp = getApp()): Installations {\n  const installationsImpl = _getProvider(app, 'installations').getImmediate();\n  return installationsImpl;\n}\n","/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FirebaseApp, FirebaseOptions } from '@firebase/app';\nimport { FirebaseError } from '@firebase/util';\nimport { AppConfig } from '../interfaces/installation-impl';\nimport { ERROR_FACTORY, ErrorCode } from '../util/errors';\n\nexport function extractAppConfig(app: FirebaseApp): AppConfig {\n  if (!app || !app.options) {\n    throw getMissingValueError('App Configuration');\n  }\n\n  if (!app.name) {\n    throw getMissingValueError('App Name');\n  }\n\n  // Required app config keys\n  const configKeys: Array<keyof FirebaseOptions> = [\n    'projectId',\n    'apiKey',\n    'appId'\n  ];\n\n  for (const keyName of configKeys) {\n    if (!app.options[keyName]) {\n      throw getMissingValueError(keyName);\n    }\n  }\n\n  return {\n    appName: app.name,\n    projectId: app.options.projectId!,\n    apiKey: app.options.apiKey!,\n    appId: app.options.appId!\n  };\n}\n\nfunction getMissingValueError(valueName: string): FirebaseError {\n  return ERROR_FACTORY.create(ErrorCode.MISSING_APP_CONFIG_VALUES, {\n    valueName\n  });\n}\n","/**\n * @license\n * Copyright 2020 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { _registerComponent, _getProvider } from '@firebase/app';\nimport {\n  Component,\n  ComponentType,\n  InstanceFactory,\n  ComponentContainer\n} from '@firebase/component';\nimport { getId, getToken } from '../api/index';\nimport { _FirebaseInstallationsInternal } from '../interfaces/public-types';\nimport { FirebaseInstallationsImpl } from '../interfaces/installation-impl';\nimport { extractAppConfig } from '../helpers/extract-app-config';\n\nconst INSTALLATIONS_NAME = 'installations';\nconst INSTALLATIONS_NAME_INTERNAL = 'installations-internal';\n\nconst publicFactory: InstanceFactory<'installations'> = (\n  container: ComponentContainer\n) => {\n  const app = container.getProvider('app').getImmediate();\n  // Throws if app isn't configured properly.\n  const appConfig = extractAppConfig(app);\n  const heartbeatServiceProvider = _getProvider(app, 'heartbeat');\n\n  const installationsImpl: FirebaseInstallationsImpl = {\n    app,\n    appConfig,\n    heartbeatServiceProvider,\n    _delete: () => Promise.resolve()\n  };\n  return installationsImpl;\n};\n\nconst internalFactory: InstanceFactory<'installations-internal'> = (\n  container: ComponentContainer\n) => {\n  const app = container.getProvider('app').getImmediate();\n  // Internal FIS instance relies on public FIS instance.\n  const installations = _getProvider(app, INSTALLATIONS_NAME).getImmediate();\n\n  const installationsInternal: _FirebaseInstallationsInternal = {\n    getId: () => getId(installations),\n    getToken: (forceRefresh?: boolean) => getToken(installations, forceRefresh)\n  };\n  return installationsInternal;\n};\n\nexport function registerInstallations(): void {\n  _registerComponent(\n    new Component(INSTALLATIONS_NAME, publicFactory, ComponentType.PUBLIC)\n  );\n  _registerComponent(\n    new Component(\n      INSTALLATIONS_NAME_INTERNAL,\n      internalFactory,\n      ComponentType.PRIVATE\n    )\n  );\n}\n","/**\n * The Firebase Installations Web SDK.\n * This SDK does not work in a Node.js environment.\n *\n * @packageDocumentation\n */\n\n/**\n * @license\n * Copyright 2019 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { registerInstallations } from './functions/config';\nimport { registerVersion } from '@firebase/app';\nimport { name, version } from '../package.json';\n\nexport * from './api';\nexport * from './interfaces/public-types';\n\nregisterInstallations();\nregisterVersion(name, version);\n// BUILD_TARGET will be replaced by values like esm2017, cjs2017, etc during the compilation\nregisterVersion(name, version, '__BUILD_TARGET__');\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n","import { w as wrap, r as replaceTraps } from './wrap-idb-value.js';\nexport { u as unwrap, w as wrap } from './wrap-idb-value.js';\n\n/**\n * Open a database.\n *\n * @param name Name of the database.\n * @param version Schema version.\n * @param callbacks Additional callbacks.\n */\nfunction openDB(name, version, { blocked, upgrade, blocking, terminated } = {}) {\n    const request = indexedDB.open(name, version);\n    const openPromise = wrap(request);\n    if (upgrade) {\n        request.addEventListener('upgradeneeded', (event) => {\n            upgrade(wrap(request.result), event.oldVersion, event.newVersion, wrap(request.transaction), event);\n        });\n    }\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event.newVersion, event));\n    }\n    openPromise\n        .then((db) => {\n        if (terminated)\n            db.addEventListener('close', () => terminated());\n        if (blocking) {\n            db.addEventListener('versionchange', (event) => blocking(event.oldVersion, event.newVersion, event));\n        }\n    })\n        .catch(() => { });\n    return openPromise;\n}\n/**\n * Delete a database.\n *\n * @param name Name of the database.\n */\nfunction deleteDB(name, { blocked } = {}) {\n    const request = indexedDB.deleteDatabase(name);\n    if (blocked) {\n        request.addEventListener('blocked', (event) => blocked(\n        // Casting due to https://github.com/microsoft/TypeScript-DOM-lib-generator/pull/1405\n        event.oldVersion, event));\n    }\n    return wrap(request).then(() => undefined);\n}\n\nconst readMethods = ['get', 'getKey', 'getAll', 'getAllKeys', 'count'];\nconst writeMethods = ['put', 'add', 'delete', 'clear'];\nconst cachedMethods = new Map();\nfunction getMethod(target, prop) {\n    if (!(target instanceof IDBDatabase &&\n        !(prop in target) &&\n        typeof prop === 'string')) {\n        return;\n    }\n    if (cachedMethods.get(prop))\n        return cachedMethods.get(prop);\n    const targetFuncName = prop.replace(/FromIndex$/, '');\n    const useIndex = prop !== targetFuncName;\n    const isWrite = writeMethods.includes(targetFuncName);\n    if (\n    // Bail if the target doesn't exist on the target. Eg, getAll isn't in Edge.\n    !(targetFuncName in (useIndex ? IDBIndex : IDBObjectStore).prototype) ||\n        !(isWrite || readMethods.includes(targetFuncName))) {\n        return;\n    }\n    const method = async function (storeName, ...args) {\n        // isWrite ? 'readwrite' : undefined gzipps better, but fails in Edge :(\n        const tx = this.transaction(storeName, isWrite ? 'readwrite' : 'readonly');\n        let target = tx.store;\n        if (useIndex)\n            target = target.index(args.shift());\n        // Must reject if op rejects.\n        // If it's a write operation, must reject if tx.done rejects.\n        // Must reject with op rejection first.\n        // Must resolve with op value.\n        // Must handle both promises (no unhandled rejections)\n        return (await Promise.all([\n            target[targetFuncName](...args),\n            isWrite && tx.done,\n        ]))[0];\n    };\n    cachedMethods.set(prop, method);\n    return method;\n}\nreplaceTraps((oldTraps) => ({\n    ...oldTraps,\n    get: (target, prop, receiver) => getMethod(target, prop) || oldTraps.get(target, prop, receiver),\n    has: (target, prop) => !!getMethod(target, prop) || oldTraps.has(target, prop),\n}));\n\nexport { deleteDB, openDB };\n","const instanceOfAny = (object, constructors) => constructors.some((c) => object instanceof c);\n\nlet idbProxyableTypes;\nlet cursorAdvanceMethods;\n// This is a function to prevent it throwing up in node environments.\nfunction getIdbProxyableTypes() {\n    return (idbProxyableTypes ||\n        (idbProxyableTypes = [\n            IDBDatabase,\n            IDBObjectStore,\n            IDBIndex,\n            IDBCursor,\n            IDBTransaction,\n        ]));\n}\n// This is a function to prevent it throwing up in node environments.\nfunction getCursorAdvanceMethods() {\n    return (cursorAdvanceMethods ||\n        (cursorAdvanceMethods = [\n            IDBCursor.prototype.advance,\n            IDBCursor.prototype.continue,\n            IDBCursor.prototype.continuePrimaryKey,\n        ]));\n}\nconst cursorRequestMap = new WeakMap();\nconst transactionDoneMap = new WeakMap();\nconst transactionStoreNamesMap = new WeakMap();\nconst transformCache = new WeakMap();\nconst reverseTransformCache = new WeakMap();\nfunction promisifyRequest(request) {\n    const promise = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            request.removeEventListener('success', success);\n            request.removeEventListener('error', error);\n        };\n        const success = () => {\n            resolve(wrap(request.result));\n            unlisten();\n        };\n        const error = () => {\n            reject(request.error);\n            unlisten();\n        };\n        request.addEventListener('success', success);\n        request.addEventListener('error', error);\n    });\n    promise\n        .then((value) => {\n        // Since cursoring reuses the IDBRequest (*sigh*), we cache it for later retrieval\n        // (see wrapFunction).\n        if (value instanceof IDBCursor) {\n            cursorRequestMap.set(value, request);\n        }\n        // Catching to avoid \"Uncaught Promise exceptions\"\n    })\n        .catch(() => { });\n    // This mapping exists in reverseTransformCache but doesn't doesn't exist in transformCache. This\n    // is because we create many promises from a single IDBRequest.\n    reverseTransformCache.set(promise, request);\n    return promise;\n}\nfunction cacheDonePromiseForTransaction(tx) {\n    // Early bail if we've already created a done promise for this transaction.\n    if (transactionDoneMap.has(tx))\n        return;\n    const done = new Promise((resolve, reject) => {\n        const unlisten = () => {\n            tx.removeEventListener('complete', complete);\n            tx.removeEventListener('error', error);\n            tx.removeEventListener('abort', error);\n        };\n        const complete = () => {\n            resolve();\n            unlisten();\n        };\n        const error = () => {\n            reject(tx.error || new DOMException('AbortError', 'AbortError'));\n            unlisten();\n        };\n        tx.addEventListener('complete', complete);\n        tx.addEventListener('error', error);\n        tx.addEventListener('abort', error);\n    });\n    // Cache it for later retrieval.\n    transactionDoneMap.set(tx, done);\n}\nlet idbProxyTraps = {\n    get(target, prop, receiver) {\n        if (target instanceof IDBTransaction) {\n            // Special handling for transaction.done.\n            if (prop === 'done')\n                return transactionDoneMap.get(target);\n            // Polyfill for objectStoreNames because of Edge.\n            if (prop === 'objectStoreNames') {\n                return target.objectStoreNames || transactionStoreNamesMap.get(target);\n            }\n            // Make tx.store return the only store in the transaction, or undefined if there are many.\n            if (prop === 'store') {\n                return receiver.objectStoreNames[1]\n                    ? undefined\n                    : receiver.objectStore(receiver.objectStoreNames[0]);\n            }\n        }\n        // Else transform whatever we get back.\n        return wrap(target[prop]);\n    },\n    set(target, prop, value) {\n        target[prop] = value;\n        return true;\n    },\n    has(target, prop) {\n        if (target instanceof IDBTransaction &&\n            (prop === 'done' || prop === 'store')) {\n            return true;\n        }\n        return prop in target;\n    },\n};\nfunction replaceTraps(callback) {\n    idbProxyTraps = callback(idbProxyTraps);\n}\nfunction wrapFunction(func) {\n    // Due to expected object equality (which is enforced by the caching in `wrap`), we\n    // only create one new func per func.\n    // Edge doesn't support objectStoreNames (booo), so we polyfill it here.\n    if (func === IDBDatabase.prototype.transaction &&\n        !('objectStoreNames' in IDBTransaction.prototype)) {\n        return function (storeNames, ...args) {\n            const tx = func.call(unwrap(this), storeNames, ...args);\n            transactionStoreNamesMap.set(tx, storeNames.sort ? storeNames.sort() : [storeNames]);\n            return wrap(tx);\n        };\n    }\n    // Cursor methods are special, as the behaviour is a little more different to standard IDB. In\n    // IDB, you advance the cursor and wait for a new 'success' on the IDBRequest that gave you the\n    // cursor. It's kinda like a promise that can resolve with many values. That doesn't make sense\n    // with real promises, so each advance methods returns a new promise for the cursor object, or\n    // undefined if the end of the cursor has been reached.\n    if (getCursorAdvanceMethods().includes(func)) {\n        return function (...args) {\n            // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n            // the original object.\n            func.apply(unwrap(this), args);\n            return wrap(cursorRequestMap.get(this));\n        };\n    }\n    return function (...args) {\n        // Calling the original function with the proxy as 'this' causes ILLEGAL INVOCATION, so we use\n        // the original object.\n        return wrap(func.apply(unwrap(this), args));\n    };\n}\nfunction transformCachableValue(value) {\n    if (typeof value === 'function')\n        return wrapFunction(value);\n    // This doesn't return, it just creates a 'done' promise for the transaction,\n    // which is later returned for transaction.done (see idbObjectHandler).\n    if (value instanceof IDBTransaction)\n        cacheDonePromiseForTransaction(value);\n    if (instanceOfAny(value, getIdbProxyableTypes()))\n        return new Proxy(value, idbProxyTraps);\n    // Return the same value back if we're not going to transform it.\n    return value;\n}\nfunction wrap(value) {\n    // We sometimes generate multiple promises from a single IDBRequest (eg when cursoring), because\n    // IDB is weird and a single IDBRequest can yield many responses, so these can't be cached.\n    if (value instanceof IDBRequest)\n        return promisifyRequest(value);\n    // If we've already transformed this value before, reuse the transformed value.\n    // This is faster, but it also provides object equality.\n    if (transformCache.has(value))\n        return transformCache.get(value);\n    const newValue = transformCachableValue(value);\n    // Not all types are transformed.\n    // These may be primitive types, so they can't be WeakMap keys.\n    if (newValue !== value) {\n        transformCache.set(value, newValue);\n        reverseTransformCache.set(newValue, value);\n    }\n    return newValue;\n}\nconst unwrap = (value) => reverseTransformCache.get(value);\n\nexport { reverseTransformCache as a, instanceOfAny as i, replaceTraps as r, unwrap as u, wrap as w };\n"],"names":["MessageType","getToken","deleteToken","onMessage","_getToken","_deleteToken","_onMessage"],"version":3,"file":"home.8eedcd47.js.map","sourceRoot":"/__parcel_source_root/"}