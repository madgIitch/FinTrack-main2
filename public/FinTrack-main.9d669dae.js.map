{"mappings":"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","sources":["<anon>","js/index.js"],"sourcesContent":["import \"./FinTrack-main.401b9eb7.js\";\n\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $gEjZb = parcelRequire(\"gEjZb\");\n\nvar $6AR8M = parcelRequire(\"6AR8M\");\ndocument.addEventListener('DOMContentLoaded', ()=>{\n    console.log('index.js loaded');\n    const loginForm = document.getElementById('login-form');\n    const resetForm = document.getElementById('reset-form');\n    const showResetFormButton = document.getElementById('show-reset-form');\n    const backToLoginButton = document.getElementById('back-to-login');\n    const registerLink = document.getElementById('register-link');\n    // Mostrar formulario de recuperación de contraseña\n    if (showResetFormButton) showResetFormButton.addEventListener('click', (event)=>{\n        event.preventDefault();\n        console.log(\"Mostrando formulario de recuperaci\\xf3n de contrase\\xf1a.\");\n        // Oculta el formulario de login, el enlace de recuperación y el botón de registro\n        loginForm.style.display = 'none';\n        showResetFormButton.style.display = 'none';\n        if (registerLink) registerLink.style.display = 'none';\n        // Muestra el formulario de recuperación\n        resetForm.style.display = 'block';\n        console.log(\"reset-form computed display:\", getComputedStyle(resetForm).display);\n    });\n    // Volver al formulario de login\n    if (backToLoginButton) backToLoginButton.addEventListener('click', (event)=>{\n        event.preventDefault();\n        console.log(\"Volviendo al formulario de inicio de sesi\\xf3n.\");\n        // Oculta el formulario de recuperación\n        resetForm.style.display = 'none';\n        // Muestra el formulario de login, el registro y el enlace de recuperación\n        loginForm.style.display = 'block';\n        showResetFormButton.style.display = 'inline-block';\n        if (registerLink) registerLink.style.display = 'inline-block';\n        console.log(\"login-form computed display:\", getComputedStyle(loginForm).display);\n    });\n    // Lógica del formulario de inicio de sesión\n    if (loginForm) loginForm.addEventListener('submit', async (event)=>{\n        event.preventDefault();\n        const email = document.getElementById('email').value;\n        const password = document.getElementById('password').value;\n        try {\n            await (0, $6AR8M.setPersistence)((0, $gEjZb.auth), (0, $6AR8M.browserLocalPersistence));\n            const userCredential = await (0, $6AR8M.signInWithEmailAndPassword)((0, $gEjZb.auth), email, password);\n            const user = userCredential.user;\n            if (user.emailVerified) {\n                console.log('Usuario logueado y correo verificado, redirigiendo.');\n                sessionStorage.setItem('hasRedirected', 'true');\n                window.location.href = '/pages/home.html';\n            } else {\n                console.log('Usuario logueado pero correo no verificado.');\n                alert(\"Por favor, verifica tu direcci\\xf3n de correo electr\\xf3nico antes de continuar.\");\n            }\n        } catch (error) {\n            console.error(\"Error al iniciar sesi\\xf3n:\", error);\n            let errorMessage = \"Error al iniciar sesi\\xf3n. Verifica tus credenciales.\";\n            if (error.code === 'auth/wrong-password') errorMessage = \"Contrase\\xf1a incorrecta.\";\n            else if (error.code === 'auth/user-not-found') errorMessage = 'Usuario no encontrado.';\n            alert(errorMessage);\n        }\n    });\n    // Lógica del formulario de recuperación de contraseña\n    if (resetForm) resetForm.addEventListener('submit', async (event)=>{\n        event.preventDefault();\n        const resetEmail = document.getElementById('reset-email').value;\n        console.log(\"Enviando instrucciones de recuperaci\\xf3n a: \" + resetEmail);\n        try {\n            await (0, $6AR8M.sendPasswordResetEmail)((0, $gEjZb.auth), resetEmail);\n            console.log('Instrucciones enviadas a ' + resetEmail);\n            alert(\"Se han enviado instrucciones a tu correo electr\\xf3nico.\");\n            // Volver al formulario de inicio de sesión\n            resetForm.style.display = 'none';\n            loginForm.style.display = 'block';\n            showResetFormButton.style.display = 'inline-block';\n            if (registerLink) registerLink.style.display = 'inline-block';\n        } catch (error) {\n            console.error(\"Error al enviar correo de recuperaci\\xf3n:\", error);\n            alert('Hubo un error al enviar las instrucciones. Intenta de nuevo.');\n        }\n    });\n});\n\n\n//# sourceMappingURL=FinTrack-main.9d669dae.js.map\n","import { auth } from './firebase.js';\nimport {\n  signInWithEmailAndPassword,\n  onAuthStateChanged,\n  setPersistence,\n  browserLocalPersistence,\n  sendPasswordResetEmail\n} from 'firebase/auth';\n\ndocument.addEventListener('DOMContentLoaded', () => {\n    console.log('index.js loaded');\n\n    const loginForm = document.getElementById('login-form');\n    const resetForm = document.getElementById('reset-form');\n    const showResetFormButton = document.getElementById('show-reset-form');\n    const backToLoginButton = document.getElementById('back-to-login');\n    const registerLink = document.getElementById('register-link');\n\n    // Mostrar formulario de recuperación de contraseña\n    if (showResetFormButton) {\n        showResetFormButton.addEventListener('click', (event) => {\n            event.preventDefault();\n            console.log(\"Mostrando formulario de recuperación de contraseña.\");\n            // Oculta el formulario de login, el enlace de recuperación y el botón de registro\n            loginForm.style.display = 'none';\n            showResetFormButton.style.display = 'none';\n            if (registerLink) {\n              registerLink.style.display = 'none';\n            }\n            // Muestra el formulario de recuperación\n            resetForm.style.display = 'block';\n            console.log(\"reset-form computed display:\", getComputedStyle(resetForm).display);\n        });\n    }\n\n    // Volver al formulario de login\n    if (backToLoginButton) {\n        backToLoginButton.addEventListener('click', (event) => {\n            event.preventDefault();\n            console.log(\"Volviendo al formulario de inicio de sesión.\");\n            // Oculta el formulario de recuperación\n            resetForm.style.display = 'none';\n            // Muestra el formulario de login, el registro y el enlace de recuperación\n            loginForm.style.display = 'block';\n            showResetFormButton.style.display = 'inline-block';\n            if (registerLink) {\n              registerLink.style.display = 'inline-block';\n            }\n            console.log(\"login-form computed display:\", getComputedStyle(loginForm).display);\n        });\n    }\n\n    // Lógica del formulario de inicio de sesión\n    if (loginForm) {\n        loginForm.addEventListener('submit', async (event) => {\n            event.preventDefault();\n            const email = document.getElementById('email').value;\n            const password = document.getElementById('password').value;\n\n            try {\n                await setPersistence(auth, browserLocalPersistence);\n                const userCredential = await signInWithEmailAndPassword(auth, email, password);\n                const user = userCredential.user;\n\n                if (user.emailVerified) {\n                    console.log('Usuario logueado y correo verificado, redirigiendo.');\n                    sessionStorage.setItem('hasRedirected', 'true');\n                    window.location.href = '/pages/home.html';\n                } else {\n                    console.log('Usuario logueado pero correo no verificado.');\n                    alert('Por favor, verifica tu dirección de correo electrónico antes de continuar.');\n                }\n            } catch (error) {\n                console.error('Error al iniciar sesión:', error);\n                let errorMessage = 'Error al iniciar sesión. Verifica tus credenciales.';\n                if (error.code === 'auth/wrong-password') {\n                    errorMessage = 'Contraseña incorrecta.';\n                } else if (error.code === 'auth/user-not-found') {\n                    errorMessage = 'Usuario no encontrado.';\n                }\n                alert(errorMessage);\n            }\n        });\n    }\n\n    // Lógica del formulario de recuperación de contraseña\n    if (resetForm) {\n        resetForm.addEventListener('submit', async (event) => {\n            event.preventDefault();\n            const resetEmail = document.getElementById('reset-email').value;\n            console.log('Enviando instrucciones de recuperación a: ' + resetEmail);\n\n            try {\n                await sendPasswordResetEmail(auth, resetEmail);\n                console.log('Instrucciones enviadas a ' + resetEmail);\n                alert('Se han enviado instrucciones a tu correo electrónico.');\n                // Volver al formulario de inicio de sesión\n                resetForm.style.display = 'none';\n                loginForm.style.display = 'block';\n                showResetFormButton.style.display = 'inline-block';\n                if (registerLink) {\n                  registerLink.style.display = 'inline-block';\n                }\n            } catch (error) {\n                console.error('Error al enviar correo de recuperación:', error);\n                alert('Hubo un error al enviar las instrucciones. Intenta de nuevo.');\n            }\n        });\n    }\n});\n"],"names":["$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$gEjZb","$6AR8M","document","addEventListener","console","log","loginForm","getElementById","resetForm","showResetFormButton","backToLoginButton","registerLink","event","preventDefault","style","display","getComputedStyle","email","value","password","setPersistence","auth","browserLocalPersistence","user","userCredential","signInWithEmailAndPassword","emailVerified","sessionStorage","setItem","window","location","href","alert","error","errorMessage","resetEmail","sendPasswordResetEmail"],"version":3,"file":"FinTrack-main.9d669dae.js.map"}