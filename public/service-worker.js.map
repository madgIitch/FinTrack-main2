{"mappings":"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","sources":["service-worker.js"],"sourcesContent":["importScripts('https://www.gstatic.com/firebasejs/9.22.1/firebase-app-compat.js');\nimportScripts('https://www.gstatic.com/firebasejs/9.22.1/firebase-messaging-compat.js');\n\n// ── Inicializar Firebase ──────────────────────────────────────\nfirebase.initializeApp({\n  apiKey: \"AIzaSyCV05aIQnCR5803w-cWAKxc6U23bwF13-0\",\n  authDomain: \"fintrack-1bced.firebaseapp.com\",\n  projectId: \"fintrack-1bced\",\n  messagingSenderId: \"576236535723\",\n  appId: \"1:576236535723:web:4276524c0c6a10a3391cee\",\n});\n\nconst messaging = firebase.messaging();\n\n// ── Notificaciones en segundo plano ───────────────────────────\nmessaging.onBackgroundMessage(payload => {\n  console.log('[firebase-messaging-sw.js] Background message', payload);\n  const { title, body, icon } = payload.notification || {};\n  self.registration.showNotification(title || 'Notificación', {\n    body: body || '',\n    icon: icon || '/icons/notification.png',\n    data: payload.data || {}\n  });\n});\n\n// ── SW lifecycle ───────────────────────────────────────────────\nself.addEventListener('install', e => {\n  console.log('[SW] Instalado');\n  self.skipWaiting();\n});\n\nself.addEventListener('activate', e => {\n  console.log('[SW] Activado');\n  e.waitUntil(self.clients.claim());\n});\n\n// ── Periodic Background Sync ──────────────────────────────────\nself.addEventListener('periodicsync', event => {\n  if (event.tag === 'sync-transactions') {\n    console.log('[SW] periodicSync recibido');\n    event.waitUntil(doFullSync());\n  }\n});\n\n// ── Trigger manual desde el cliente ───────────────────────────\nself.addEventListener('message', event => {\n  if (event.data?.type === 'TRIGGER_SYNC') {\n    console.log('[SW] Mensaje recibido: TRIGGER_SYNC');\n    event.waitUntil(doFullSync());\n  }\n});\n\n// ── doFullSync: Transacciones, Límites y Notificaciones ──────\nasync function doFullSync() {\n  console.log('[SW] doFullSync INICIADO');\n\n  try {\n    const uid = await getUIDFromIndexedDB();\n    if (!uid) {\n      console.warn('[SW] Sin UID en IndexedDB, abortando sync');\n      return;\n    }\n\n    const apiUrl = self.location.hostname === 'localhost'\n      ? 'http://localhost:5001/fintrack-1bced/us-central1/api'\n      : 'https://us-central1-fintrack-1bced.cloudfunctions.net/api';\n\n    const txRes = await fetch(`${apiUrl}/plaid/sync_transactions_and_store`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ userId: uid })\n    });\n\n    if (!txRes.ok) {\n      const errorText = await txRes.text();\n      console.error('[SW] sync_transactions_and_store falló:', txRes.status, errorText);\n      return;\n    }\n\n    const limRes = await fetch(`${apiUrl}/plaid/sync_history_limits_and_store`, {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ userId: uid })\n    });\n\n    if (!limRes.ok) {\n      const errorText = await limRes.text();\n      console.error('[SW] sync_history_limits_and_store falló:', limRes.status, errorText);\n      return;\n    }\n\n    const json = await limRes.clone().json();\n    const { period, groups } = json;\n    await storeInIndexedDB('historyLimits', { period, groups });\n\n    for (const [groupName, data] of Object.entries(groups || {})) {\n      const { limit, spent } = data;\n      if (spent <= limit) continue;\n\n      const tag = `excess-${period}-${groupName}`;\n      const prev = await self.registration.getNotifications({ tag });\n      if (prev.length > 0) continue;\n\n      const bodyText = `${groupName}: ${spent.toFixed(2)} € de ${limit.toFixed(2)} €`;\n      self.registration.showNotification('Límite excedido', {\n        body: bodyText,\n        icon: '/icons/notification-alert.png',\n        tag,\n        renotify: false,\n        vibrate: [100, 50, 100]\n      });\n    }\n  } catch (err) {\n    console.error('[SW] Error inesperado en doFullSync:', err);\n  }\n}\n\n// ── IndexedDB helpers ─────────────────────────────────────────\nfunction storeInIndexedDB(key, value) {\n  return new Promise((resolve, reject) => {\n    const request = indexedDB.open('fintrack-db', 1);\n\n    request.onupgradeneeded = () => {\n      const db = request.result;\n      if (!db.objectStoreNames.contains('metadata')) {\n        db.createObjectStore('metadata');\n      }\n    };\n\n    request.onsuccess = () => {\n      const db = request.result;\n      const tx = db.transaction('metadata', 'readwrite');\n      const store = tx.objectStore('metadata');\n      const putRequest = store.put(value, key);\n\n      putRequest.onsuccess = () => resolve();\n      putRequest.onerror = () => reject(putRequest.error);\n\n      tx.oncomplete = () => db.close();\n      tx.onerror = () => reject(tx.error);\n    };\n\n    request.onerror = () => reject(request.error);\n  });\n}\n\nfunction getUIDFromIndexedDB() {\n  return new Promise((resolve, reject) => {\n    const request = indexedDB.open('fintrack-db', 1);\n\n    request.onupgradeneeded = () => {\n      const db = request.result;\n      if (!db.objectStoreNames.contains('metadata')) {\n        db.createObjectStore('metadata');\n      }\n    };\n\n    request.onsuccess = () => {\n      const db = request.result;\n      const tx = db.transaction('metadata', 'readonly');\n      const store = tx.objectStore('metadata');\n      const getReq = store.get('userId');\n\n      getReq.onsuccess = () => {\n        resolve(getReq.result || null);\n        db.close();\n      };\n      getReq.onerror = () => {\n        reject(getReq.error);\n        db.close();\n      };\n    };\n\n    request.onerror = () => reject(request.error);\n  });\n}\n\n// ── Notificación Push Manual ─────────────────────────────────\nself.addEventListener('push', event => {\n  let payload = {\n    title: 'Notificación',\n    body:  'Tienes una nueva notificación',\n    icon:  '/icons/notification.png',\n    data:  {}\n  };\n\n  try {\n    const json = event.data.json();\n    payload = { ...payload, ...json };\n  } catch (e) {\n    console.warn('[SW] payload no era JSON, usando valores por defecto');\n  }\n\n  const options = {\n    body: payload.body,\n    icon: payload.icon,\n    tag: payload.tag,\n    renotify: payload.renotify || false,\n    vibrate: payload.vibrate || [100, 50, 100],\n    data: payload.data\n  };\n\n  event.waitUntil(\n    self.registration.showNotification(payload.title, options)\n  );\n});\n\n// ── Click en Notificación ─────────────────────────────────────\nself.addEventListener('notificationclick', event => {\n  event.notification.close();\n  event.waitUntil(\n    clients.matchAll({ type: 'window', includeUncontrolled: true }).then(clientsArr => {\n      for (const client of clientsArr) {\n        if (client.url.includes('/pages/home.html') && 'focus' in client) {\n          return client.focus();\n        }\n      }\n      if (clients.openWindow) {\n        return clients.openWindow('/pages/home.html');\n      }\n    })\n  );\n});\n"],"names":[],"version":3,"file":"service-worker.js.map","sourceRoot":"/__parcel_source_root/"}