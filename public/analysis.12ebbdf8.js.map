{"mappings":"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","sources":["<anon>","js/analysis.js"],"sourcesContent":["import \"./FinTrack-main.401b9eb7.js\";\n\n\n      var $parcel$global = globalThis;\n    \nvar $parcel$modules = {};\nvar $parcel$inits = {};\n\nvar parcelRequire = $parcel$global[\"parcelRequire94c2\"];\n\nif (parcelRequire == null) {\n  parcelRequire = function(id) {\n    if (id in $parcel$modules) {\n      return $parcel$modules[id].exports;\n    }\n    if (id in $parcel$inits) {\n      var init = $parcel$inits[id];\n      delete $parcel$inits[id];\n      var module = {id: id, exports: {}};\n      $parcel$modules[id] = module;\n      init.call(module.exports, module, module.exports);\n      return module.exports;\n    }\n    var err = new Error(\"Cannot find module '\" + id + \"'\");\n    err.code = 'MODULE_NOT_FOUND';\n    throw err;\n  };\n\n  parcelRequire.register = function register(id, init) {\n    $parcel$inits[id] = init;\n  };\n\n  $parcel$global[\"parcelRequire94c2\"] = parcelRequire;\n}\n\nvar parcelRegister = parcelRequire.register;\n\nvar $gEjZb = parcelRequire(\"gEjZb\");\n\nvar $6AR8M = parcelRequire(\"6AR8M\");\n\nvar $ilpIi = parcelRequire(\"ilpIi\");\nconsole.log('[ANALYSIS] loaded');\ndocument.addEventListener('DOMContentLoaded', ()=>{\n    console.log('[ANALYSIS] DOMContentLoaded');\n    const sidebar = document.getElementById('sidebar');\n    document.getElementById('open-sidebar').addEventListener('click', ()=>sidebar.classList.add('open'));\n    document.getElementById('close-sidebar').addEventListener('click', ()=>sidebar.classList.remove('open'));\n    document.getElementById('logout-link').addEventListener('click', async (e)=>{\n        e.preventDefault();\n        await (0, $6AR8M.signOut)((0, $gEjZb.auth));\n        window.location.href = '../index.html';\n    });\n    document.querySelectorAll('.filter-btn').forEach((btn)=>{\n        btn.addEventListener('click', ()=>{\n            document.querySelector('.filter-btn.active')?.classList.remove('active');\n            btn.classList.add('active');\n        });\n    });\n    document.getElementById('period-select').addEventListener('change', (e)=>{\n        console.log('[ANALYSIS] period change:', e.target.value);\n    });\n    (0, $6AR8M.onAuthStateChanged)((0, $gEjZb.auth), (user)=>{\n        if (!user) return window.location.href = '../index.html';\n        $4685b19230b9c989$var$reactiveAnalysis(user.uid);\n    });\n});\nlet $4685b19230b9c989$var$trendChart, $4685b19230b9c989$var$barChart, $4685b19230b9c989$var$pieChart;\nconst $4685b19230b9c989$var$groupColors = {\n    'Agricultura y Medio Ambiente': '#A8D5BA',\n    \"Alimentos y Restauraci\\xf3n\": '#FFB6B9',\n    'Arte y Cultura': '#FFD3B4',\n    \"Automoci\\xf3n y Transporte\": '#C3B1E1',\n    'Belleza y Cuidado Personal': '#FFDAC1',\n    \"Bienes Ra\\xedces y Vivienda\": '#E2F0CB',\n    'Compras y Retail': '#C0E8F9',\n    \"Deportes y Recreaci\\xf3n\": '#FFC3A0',\n    \"Educaci\\xf3n y Capacitaci\\xf3n\": '#B5EAD7',\n    'Entretenimiento y Ocio': '#D5AAFF',\n    'Eventos y Celebraciones': '#FDCBBA',\n    'Finanzas y Seguros': '#D4A5A5',\n    \"Gobierno y Servicios P\\xfablicos\": '#AED9E0',\n    \"Hogar y Jard\\xedn\": '#FFF5BA',\n    'Industrial y Manufactura': '#F1C0E8',\n    'Mascotas y Animales': '#B5B9F8',\n    'Otros': '#D9D9D9',\n    \"Religi\\xf3n y Comunidad\": '#FFCBC1',\n    'Salud y Medicina': '#BEE1E6',\n    'Servicios Profesionales': '#E4BAD4',\n    \"Tecnolog\\xeda e Internet\": '#A2D2FF',\n    \"Viajes y Hosteler\\xeda\": '#FFC9DE',\n    'Loan Payments': '#B0BEC5'\n};\nfunction $4685b19230b9c989$var$reactiveAnalysis(userId) {\n    console.log('[ANALYSIS] Start reactiveAnalysis for', userId);\n    const db = (0, $ilpIi.getFirestore)((0, $gEjZb.app));\n    const histRef = (0, $ilpIi.collection)(db, 'users', userId, 'history');\n    const sumRef = (0, $ilpIi.collection)(db, 'users', userId, 'historySummary');\n    const catRef = (0, $ilpIi.collection)(db, 'users', userId, 'historyCategorias');\n    const monthsSet = new Set();\n    const txsByMonth = new Map();\n    const catByMonth = new Map();\n    $4685b19230b9c989$var$initCharts();\n    function renderAnalysis() {\n        const months = Array.from(monthsSet).sort();\n        console.log('[RENDER] Months:', months);\n        const revenue = months.map((mon)=>{\n            const txs = txsByMonth.get(mon) || [];\n            return txs.reduce((sum, tx)=>sum + (tx.amount > 0 ? tx.amount : 0), 0);\n        });\n        const spend = months.map((mon)=>{\n            const txs = txsByMonth.get(mon) || [];\n            return txs.reduce((sum, tx)=>sum + (tx.amount < 0 ? Math.abs(tx.amount) : 0), 0);\n        });\n        const txCounts = months.map((mon)=>(txsByMonth.get(mon) || []).length);\n        const catMap = {};\n        months.forEach((mon)=>{\n            const catObj = catByMonth.get(mon) || {};\n            console.log(`[RENDER] Categor\\xedas para ${mon}:`, catObj);\n            for (const [cat, amount] of Object.entries(catObj))catMap[cat] = (catMap[cat] || 0) + amount;\n        });\n        const catLabels = Object.keys(catMap);\n        const catData = catLabels.map((c)=>+catMap[c].toFixed(2));\n        const catColors = catLabels.map((label)=>$4685b19230b9c989$var$groupColors[label] || '#999');\n        console.log('[RENDER] Pie labels:', catLabels);\n        console.log('[RENDER] Pie data:', catData);\n        const totalRev = revenue.reduce((a, b)=>a + b, 0);\n        const totalSp = spend.reduce((a, b)=>a + b, 0);\n        document.getElementById('kpi-revenue').textContent = `\\u{20AC}${totalRev.toFixed(2)}`;\n        document.getElementById('kpi-spend').textContent = `\\u{20AC}${totalSp.toFixed(2)}`;\n        document.getElementById('kpi-revenue-change').textContent = totalRev && revenue.length > 1 ? `+${((revenue.at(-1) / (totalRev - revenue.at(-1)) - 1) * 100).toFixed(1)}% vs last` : '+0% vs last';\n        document.getElementById('kpi-spend-change').textContent = totalSp && spend.length > 1 ? `+${((spend.at(-1) / (totalSp - spend.at(-1)) - 1) * 100).toFixed(1)}% vs last` : '+0% vs last';\n        $4685b19230b9c989$var$trendChart.updateOptions({\n            series: [\n                {\n                    name: 'Ingresos',\n                    data: revenue\n                },\n                {\n                    name: 'Gastos',\n                    data: spend\n                }\n            ],\n            xaxis: {\n                categories: months\n            }\n        });\n        $4685b19230b9c989$var$barChart.updateOptions({\n            series: [\n                {\n                    name: 'Transactions',\n                    data: txCounts\n                }\n            ],\n            xaxis: {\n                categories: months\n            }\n        });\n        const pContainer = document.querySelector('#pieChart');\n        pContainer.innerHTML = '';\n        $4685b19230b9c989$var$pieChart = new ApexCharts(pContainer, {\n            chart: {\n                type: 'pie',\n                height: 220,\n                animations: {\n                    enabled: false\n                }\n            },\n            series: catData,\n            labels: catLabels,\n            colors: catColors,\n            legend: {\n                position: 'bottom'\n            },\n            noData: {\n                text: \"Sin datos de categor\\xedas\",\n                align: 'center',\n                verticalAlign: 'middle',\n                style: {\n                    color: '#999',\n                    fontSize: '14px'\n                }\n            }\n        });\n        $4685b19230b9c989$var$pieChart.render();\n    }\n    function subscribeItems() {\n        const months = Array.from(monthsSet).sort();\n        console.log('[ANALYSIS] subscribeItems for months', months);\n        let loaded = 0;\n        const total = months.length * 2;\n        const maybeRender = ()=>{\n            loaded++;\n            if (loaded >= total) {\n                console.log('[ANALYSIS] Todos los datos obtenidos. Llamando a renderAnalysis()');\n                renderAnalysis();\n            }\n        };\n        months.forEach((mon)=>{\n            const itemsRef = (0, $ilpIi.collection)(db, 'users', userId, 'history', mon, 'items');\n            (0, $ilpIi.onSnapshot)(itemsRef, (snap)=>{\n                console.log('[ANALYSIS] items change in', mon, snap.docs.length);\n                txsByMonth.set(mon, snap.docs.map((d)=>d.data()));\n                maybeRender();\n            });\n            const catDocRef = (0, $ilpIi.doc)(db, 'users', userId, 'historyCategorias', mon);\n            (0, $ilpIi.onSnapshot)(catDocRef, (snap)=>{\n                if (snap.exists()) {\n                    const data = snap.data();\n                    delete data.updatedAt;\n                    catByMonth.set(mon, data);\n                    console.log(`[ANALYSIS] historyCategorias actualizadas para ${mon}:`, data);\n                } else console.log(`[ANALYSIS] No hay historyCategorias para ${mon}`);\n                maybeRender();\n            });\n        });\n    }\n    (0, $ilpIi.onSnapshot)(histRef, (snap)=>{\n        snap.docs.forEach((d)=>monthsSet.add(d.id));\n        console.log('[ANALYSIS] history months updated:', Array.from(monthsSet));\n        subscribeItems();\n    });\n    (0, $ilpIi.onSnapshot)(sumRef, (snap)=>{\n        snap.docs.forEach((d)=>monthsSet.add(d.id));\n        console.log('[ANALYSIS] summary months updated:', Array.from(monthsSet));\n        subscribeItems();\n    });\n}\nfunction $4685b19230b9c989$var$initCharts() {\n    console.log('[ANALYSIS] initCharts llamado');\n    const tEl = document.querySelector('#trendChart');\n    tEl.innerHTML = '';\n    $4685b19230b9c989$var$trendChart = new ApexCharts(tEl, {\n        chart: {\n            type: 'line',\n            height: 240,\n            toolbar: {\n                show: false\n            }\n        },\n        series: [],\n        xaxis: {\n            categories: []\n        },\n        stroke: {\n            curve: 'smooth',\n            width: 2\n        },\n        grid: {\n            borderColor: '#eee'\n        }\n    });\n    $4685b19230b9c989$var$trendChart.render();\n    const bEl = document.querySelector('#barChart');\n    bEl.innerHTML = '';\n    $4685b19230b9c989$var$barChart = new ApexCharts(bEl, {\n        chart: {\n            type: 'bar',\n            height: 200,\n            toolbar: {\n                show: false\n            }\n        },\n        series: [],\n        xaxis: {\n            categories: []\n        },\n        plotOptions: {\n            bar: {\n                borderRadius: 4\n            }\n        },\n        dataLabels: {\n            enabled: true,\n            style: {\n                colors: [\n                    '#fff'\n                ]\n            },\n            formatter: (v)=>v\n        },\n        grid: {\n            borderColor: '#eee'\n        }\n    });\n    $4685b19230b9c989$var$barChart.render();\n    const pEl = document.querySelector('#pieChart');\n    pEl.innerHTML = '';\n    $4685b19230b9c989$var$pieChart = new ApexCharts(pEl, {\n        chart: {\n            type: 'pie',\n            height: 220,\n            animations: {\n                enabled: false\n            }\n        },\n        series: [],\n        labels: [],\n        colors: [],\n        legend: {\n            position: 'bottom'\n        },\n        noData: {\n            text: 'Cargando datos...',\n            align: 'center',\n            verticalAlign: 'middle',\n            style: {\n                color: '#999',\n                fontSize: '14px'\n            }\n        }\n    });\n    $4685b19230b9c989$var$pieChart.render();\n}\n\n\n//# sourceMappingURL=analysis.12ebbdf8.js.map\n","import { auth, app } from './firebase.js';\nimport { onAuthStateChanged, signOut } from 'firebase/auth';\nimport { getFirestore, collection, onSnapshot, doc } from 'firebase/firestore';\n\nconsole.log('[ANALYSIS] loaded');\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  console.log('[ANALYSIS] DOMContentLoaded');\n\n  const sidebar = document.getElementById('sidebar');\n  document.getElementById('open-sidebar').addEventListener('click', () => sidebar.classList.add('open'));\n  document.getElementById('close-sidebar').addEventListener('click', () => sidebar.classList.remove('open'));\n  document.getElementById('logout-link').addEventListener('click', async e => {\n    e.preventDefault();\n    await signOut(auth);\n    window.location.href = '../index.html';\n  });\n\n  document.querySelectorAll('.filter-btn').forEach(btn => {\n    btn.addEventListener('click', () => {\n      document.querySelector('.filter-btn.active')?.classList.remove('active');\n      btn.classList.add('active');\n    });\n  });\n\n  document.getElementById('period-select').addEventListener('change', e => {\n    console.log('[ANALYSIS] period change:', e.target.value);\n  });\n\n  onAuthStateChanged(auth, user => {\n    if (!user) return window.location.href = '../index.html';\n    reactiveAnalysis(user.uid);\n  });\n});\n\nlet trendChart, barChart, pieChart;\n\nconst groupColors = {\n  'Agricultura y Medio Ambiente': '#A8D5BA',\n  'Alimentos y Restauración': '#FFB6B9',\n  'Arte y Cultura': '#FFD3B4',\n  'Automoción y Transporte': '#C3B1E1',\n  'Belleza y Cuidado Personal': '#FFDAC1',\n  'Bienes Raíces y Vivienda': '#E2F0CB',\n  'Compras y Retail': '#C0E8F9',\n  'Deportes y Recreación': '#FFC3A0',\n  'Educación y Capacitación': '#B5EAD7',\n  'Entretenimiento y Ocio': '#D5AAFF',\n  'Eventos y Celebraciones': '#FDCBBA',\n  'Finanzas y Seguros': '#D4A5A5',\n  'Gobierno y Servicios Públicos': '#AED9E0',\n  'Hogar y Jardín': '#FFF5BA',\n  'Industrial y Manufactura': '#F1C0E8',\n  'Mascotas y Animales': '#B5B9F8',\n  'Otros': '#D9D9D9',\n  'Religión y Comunidad': '#FFCBC1',\n  'Salud y Medicina': '#BEE1E6',\n  'Servicios Profesionales': '#E4BAD4',\n  'Tecnología e Internet': '#A2D2FF',\n  'Viajes y Hostelería': '#FFC9DE',\n  'Loan Payments': '#B0BEC5'\n};\n\nfunction reactiveAnalysis(userId) {\n  console.log('[ANALYSIS] Start reactiveAnalysis for', userId);\n  const db = getFirestore(app);\n  const histRef = collection(db, 'users', userId, 'history');\n  const sumRef = collection(db, 'users', userId, 'historySummary');\n  const catRef = collection(db, 'users', userId, 'historyCategorias');\n\n  const monthsSet = new Set();\n  const txsByMonth = new Map();\n  const catByMonth = new Map();\n\n  initCharts();\n\n  function renderAnalysis() {\n    const months = Array.from(monthsSet).sort();\n    console.log('[RENDER] Months:', months);\n\n    const revenue = months.map(mon => {\n      const txs = txsByMonth.get(mon) || [];\n      return txs.reduce((sum, tx) => sum + (tx.amount > 0 ? tx.amount : 0), 0);\n    });\n\n    const spend = months.map(mon => {\n      const txs = txsByMonth.get(mon) || [];\n      return txs.reduce((sum, tx) => sum + (tx.amount < 0 ? Math.abs(tx.amount) : 0), 0);\n    });\n\n    const txCounts = months.map(mon => (txsByMonth.get(mon) || []).length);\n\n    const catMap = {};\n    months.forEach(mon => {\n      const catObj = catByMonth.get(mon) || {};\n      console.log(`[RENDER] Categorías para ${mon}:`, catObj);\n      for (const [cat, amount] of Object.entries(catObj)) {\n        catMap[cat] = (catMap[cat] || 0) + amount;\n      }\n    });\n\n    const catLabels = Object.keys(catMap);\n    const catData = catLabels.map(c => +catMap[c].toFixed(2));\n    const catColors = catLabels.map(label => groupColors[label] || '#999');\n\n    console.log('[RENDER] Pie labels:', catLabels);\n    console.log('[RENDER] Pie data:', catData);\n\n    const totalRev = revenue.reduce((a, b) => a + b, 0);\n    const totalSp = spend.reduce((a, b) => a + b, 0);\n\n    document.getElementById('kpi-revenue').textContent = `€${totalRev.toFixed(2)}`;\n    document.getElementById('kpi-spend').textContent = `€${totalSp.toFixed(2)}`;\n    document.getElementById('kpi-revenue-change').textContent = totalRev && revenue.length > 1\n      ? `+${((revenue.at(-1) / (totalRev - revenue.at(-1)) - 1) * 100).toFixed(1)}% vs last`\n      : '+0% vs last';\n    document.getElementById('kpi-spend-change').textContent = totalSp && spend.length > 1\n      ? `+${((spend.at(-1) / (totalSp - spend.at(-1)) - 1) * 100).toFixed(1)}% vs last`\n      : '+0% vs last';\n\n    trendChart.updateOptions({\n      series: [\n        { name: 'Ingresos', data: revenue },\n        { name: 'Gastos', data: spend }\n      ],\n      xaxis: { categories: months }\n    });\n\n    barChart.updateOptions({\n      series: [{ name: 'Transactions', data: txCounts }],\n      xaxis: { categories: months }\n    });\n\n    const pContainer = document.querySelector('#pieChart');\n    pContainer.innerHTML = '';\n    pieChart = new ApexCharts(pContainer, {\n      chart: { type: 'pie', height: 220, animations: { enabled: false } },\n      series: catData,\n      labels: catLabels,\n      colors: catColors,\n      legend: { position: 'bottom' },\n      noData: {\n        text: 'Sin datos de categorías',\n        align: 'center',\n        verticalAlign: 'middle',\n        style: { color: '#999', fontSize: '14px' }\n      }\n    });\n    pieChart.render();\n  }\n\n  function subscribeItems() {\n    const months = Array.from(monthsSet).sort();\n    console.log('[ANALYSIS] subscribeItems for months', months);\n\n    let loaded = 0;\n    const total = months.length * 2;\n\n    const maybeRender = () => {\n      loaded++;\n      if (loaded >= total) {\n        console.log('[ANALYSIS] Todos los datos obtenidos. Llamando a renderAnalysis()');\n        renderAnalysis();\n      }\n    };\n\n    months.forEach(mon => {\n      const itemsRef = collection(db, 'users', userId, 'history', mon, 'items');\n      onSnapshot(itemsRef, snap => {\n        console.log('[ANALYSIS] items change in', mon, snap.docs.length);\n        txsByMonth.set(mon, snap.docs.map(d => d.data()));\n        maybeRender();\n      });\n\n      const catDocRef = doc(db, 'users', userId, 'historyCategorias', mon);\n      onSnapshot(catDocRef, snap => {\n        if (snap.exists()) {\n          const data = snap.data();\n          delete data.updatedAt;\n          catByMonth.set(mon, data);\n          console.log(`[ANALYSIS] historyCategorias actualizadas para ${mon}:`, data);\n        } else {\n          console.log(`[ANALYSIS] No hay historyCategorias para ${mon}`);\n        }\n        maybeRender();\n      });\n    });\n  }\n\n  onSnapshot(histRef, snap => {\n    snap.docs.forEach(d => monthsSet.add(d.id));\n    console.log('[ANALYSIS] history months updated:', Array.from(monthsSet));\n    subscribeItems();\n  });\n\n  onSnapshot(sumRef, snap => {\n    snap.docs.forEach(d => monthsSet.add(d.id));\n    console.log('[ANALYSIS] summary months updated:', Array.from(monthsSet));\n    subscribeItems();\n  });\n}\n\nfunction initCharts() {\n  console.log('[ANALYSIS] initCharts llamado');\n\n  const tEl = document.querySelector('#trendChart'); tEl.innerHTML = '';\n  trendChart = new ApexCharts(tEl, {\n    chart: { type: 'line', height: 240, toolbar: { show: false } },\n    series: [],\n    xaxis: { categories: [] },\n    stroke: { curve: 'smooth', width: 2 },\n    grid: { borderColor: '#eee' }\n  });\n  trendChart.render();\n\n  const bEl = document.querySelector('#barChart'); bEl.innerHTML = '';\n  barChart = new ApexCharts(bEl, {\n    chart: { type: 'bar', height: 200, toolbar: { show: false } },\n    series: [],\n    xaxis: { categories: [] },\n    plotOptions: { bar: { borderRadius: 4 } },\n    dataLabels: { enabled: true, style: { colors: ['#fff'] }, formatter: v => v },\n    grid: { borderColor: '#eee' }\n  });\n  barChart.render();\n\n  const pEl = document.querySelector('#pieChart'); pEl.innerHTML = '';\n  pieChart = new ApexCharts(pEl, {\n    chart: { type: 'pie', height: 220, animations: { enabled: false } },\n    series: [],\n    labels: [],\n    colors: [],\n    legend: { position: 'bottom' },\n    noData: {\n      text: 'Cargando datos...',\n      align: 'center',\n      verticalAlign: 'middle',\n      style: { color: '#999', fontSize: '14px' }\n    }\n  });\n  pieChart.render();\n}\n"],"names":["$4685b19230b9c989$var$trendChart","$4685b19230b9c989$var$barChart","$4685b19230b9c989$var$pieChart","$parcel$global","globalThis","$parcel$modules","$parcel$inits","parcelRequire","id","exports","init","module","call","err","Error","code","register","$gEjZb","$6AR8M","$ilpIi","console","log","document","addEventListener","sidebar","getElementById","classList","add","remove","e","preventDefault","signOut","auth","window","location","href","querySelectorAll","forEach","btn","querySelector","target","value","onAuthStateChanged","user","$4685b19230b9c989$var$reactiveAnalysis","userId","db","getFirestore","app","histRef","collection","sumRef","monthsSet","Set","txsByMonth","Map","catByMonth","tEl","innerHTML","ApexCharts","chart","type","height","toolbar","show","series","xaxis","categories","stroke","curve","width","grid","borderColor","render","bEl","plotOptions","bar","borderRadius","dataLabels","enabled","style","colors","formatter","v","pEl","subscribeItems","months","Array","from","sort","loaded","total","length","maybeRender","renderAnalysis","revenue","map","mon","txs","get","reduce","sum","tx","amount","spend","Math","abs","txCounts","catMap","catObj","cat","Object","entries","catLabels","keys","catData","c","toFixed","catColors","label","$4685b19230b9c989$var$groupColors","totalRev","a","b","totalSp","textContent","at","updateOptions","name","data","pContainer","animations","labels","legend","position","noData","text","align","verticalAlign","color","fontSize","itemsRef","onSnapshot","snap","docs","set","d","catDocRef","doc","exists","updatedAt","uid"],"version":3,"file":"analysis.12ebbdf8.js.map"}