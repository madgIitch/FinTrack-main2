{"mappings":"AAAA,MAAM,eAAe;AACrB,MAAM,YAAY;AAElB,MAAM,gBAAgB;IACpB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACD;AAED,6EAA6E;AAC7E,KAAK,gBAAgB,CAAC,WAAW,CAAA;IAC/B,QAAQ,GAAG,CAAC;IACZ,MAAM,SAAS,CACb,OAAO,IAAI,CAAC,cACT,IAAI,CAAC,CAAA,QAAS,MAAM,MAAM,CAAC,gBAC3B,IAAI,CAAC,IAAM,KAAK,WAAW,IAC3B,KAAK,CAAC,CAAA,MAAO,QAAQ,KAAK,CAAC,gCAAgC;AAElE;AAEA,6EAA6E;AAC7E,KAAK,gBAAgB,CAAC,YAAY,CAAA;IAChC,MAAM,SAAS,CACf,AAAC,CAAA;QACC,MAAM,QAAQ,MAAM,OAAO,IAAI,CAAC;QAChC,KAAK,MAAM,SAAS,cAClB,IAAI;YACF,MAAM,WAAW,MAAM,MAAM;YAC7B,IAAI,CAAC,SAAS,EAAE,EAAE,MAAM,IAAI,MAAM,GAAG,SAAS,MAAM,CAAC,CAAC,EAAE,SAAS,UAAU,EAAE;YAC7E,MAAM,MAAM,GAAG,CAAC,OAAO,SAAS,KAAK;YACrC,QAAQ,GAAG,CAAC,CAAC,+BAAwB,EAAE,OAAO;QAChD,EAAE,OAAO,KAAK;YACZ,QAAQ,IAAI,CAAC,CAAC,iDAAmC,EAAE,OAAO,EAAE;QAC9D;QAEF,KAAK,WAAW;IAClB,CAAA;AAGF;AAEA,4EAA4E;AAC5E,KAAK,gBAAgB,CAAC,SAAS,CAAA;IAC7B,MAAM,MAAM,IAAI,IAAI,MAAM,OAAO,CAAC,GAAG;IACrC,MAAM,WAAW,IAAI,QAAQ;IAE7B,IAAI,MAAM,OAAO,CAAC,MAAM,KAAK,OAAO;IAEpC,wBAAwB;IACxB,IAAI,cAAc,QAAQ,CAAC,WAAW;QACpC,MAAM,WAAW,CACf,OAAO,KAAK,CAAC,MAAM,OAAO,EAAE,IAAI,CAAC,CAAA,SAC/B,UAAU,MAAM,MAAM,OAAO;QAGjC;IACF;IAEA,uCAAuC;IACvC,IAAI,SAAS,QAAQ,CAAC,UAAU;QAC9B,MAAM,WAAW,CACf,OAAO,IAAI,CAAC,WAAW,IAAI,CAAC,OAAM;YAChC,IAAI;gBACF,MAAM,WAAW,MAAM,MAAM,MAAM,OAAO,CAAC,KAAK;gBAChD,IAAI,SAAS,EAAE,EACb,MAAM,GAAG,CAAC,MAAM,OAAO,EAAE,SAAS,KAAK;gBAEzC,OAAO;YACT,EAAE,OAAO,KAAK;gBACZ,QAAQ,IAAI,CAAC,kDAA+C;gBAC5D,MAAM,SAAS,MAAM,MAAM,KAAK,CAAC,MAAM,OAAO;gBAC9C,OAAO,UAAU,IAAI,SAAS,KAAK,SAAS,CAAC;oBAAE,OAAO;gBAAsB,IAAI;oBAC9E,QAAQ;oBACR,SAAS;wBAAE,gBAAgB;oBAAmB;gBAChD;YACF;QACF;QAEF;IACF;IAEA,uCAAuC;IACvC,MAAM,WAAW,CACf,OAAO,KAAK,CAAC,MAAM,OAAO,EAAE,IAAI,CAAC,CAAA,SAC/B,UACA,MAAM,MAAM,OAAO,EAAE,KAAK,CAAC,CAAA;YACzB,QAAQ,IAAI,CAAC,+CAA4C;YAEzD,uCAAuC;YACvC,IAAI,MAAM,OAAO,CAAC,WAAW,KAAK,YAChC,OAAO,OAAO,KAAK,CAAC;YAGtB,OAAO,IAAI,SAAS,iCAAiC;gBACnD,QAAQ;gBACR,YAAY;YACd;QACF;AAGN","sources":["sw-static-cache.js"],"sourcesContent":["const STATIC_CACHE = 'static-v1';\r\nconst API_CACHE = 'fintrack-api-cache';\r\n\r\nconst STATIC_ASSETS = [\r\n  '/index.html',\r\n  '/manifest.webmanifest',\r\n  '/pages/home.html',\r\n  '/pages/profile.html',\r\n  '/pages/analysis.html',\r\n  '/pages/settings.html',\r\n  '/pages/register.html',\r\n  '/pages/notifications.html',\r\n  '/pages/transactions.html',\r\n  '/logoFintonic192x192.c58ee458.png',\r\n];\r\n\r\n// ── Instalar y cachear recursos estáticos ─────────────────────────────────\r\nself.addEventListener('install', event => {\r\n  console.log('[SW STATIC] Instalando y cacheando recursos estáticos');\r\n  event.waitUntil(\r\n    caches.open(STATIC_CACHE)\r\n      .then(cache => cache.addAll(STATIC_ASSETS))\r\n      .then(() => self.skipWaiting())\r\n      .catch(err => console.error('[SW STATIC] Error cacheando:', err))\r\n  );\r\n});\r\n\r\n// ── Activar y limpiar caches antiguos ─────────────────────────────────────\r\nself.addEventListener('activate', event => {\r\n  event.waitUntil(\r\n  (async () => {\r\n    const cache = await caches.open(STATIC_CACHE);\r\n    for (const asset of STATIC_ASSETS) {\r\n      try {\r\n        const response = await fetch(asset);\r\n        if (!response.ok) throw new Error(`${response.status} ${response.statusText}`);\r\n        await cache.put(asset, response.clone());\r\n        console.log(`[SW STATIC] ✅ Cacheado: ${asset}`);\r\n      } catch (err) {\r\n        console.warn(`[SW STATIC] ⚠️ No se pudo cachear: ${asset}`, err);\r\n      }\r\n    }\r\n    self.skipWaiting();\r\n  })()\r\n);\r\n\r\n});\r\n\r\n// ── Interceptar peticiones ───────────────────────────────────────────────\r\nself.addEventListener('fetch', event => {\r\n  const url = new URL(event.request.url);\r\n  const pathname = url.pathname;\r\n\r\n  if (event.request.method !== 'GET') return;\r\n\r\n  // 1. Recursos estáticos\r\n  if (STATIC_ASSETS.includes(pathname)) {\r\n    event.respondWith(\r\n      caches.match(event.request).then(cached =>\r\n        cached || fetch(event.request)\r\n      )\r\n    );\r\n    return;\r\n  }\r\n\r\n  // 2. Peticiones a API → cache dinámico\r\n  if (pathname.includes('/api/')) {\r\n    event.respondWith(\r\n      caches.open(API_CACHE).then(async cache => {\r\n        try {\r\n          const response = await fetch(event.request.clone());\r\n          if (response.ok) {\r\n            cache.put(event.request, response.clone());\r\n          }\r\n          return response;\r\n        } catch (err) {\r\n          console.warn('[SW STATIC] API offline, usando caché para:', pathname);\r\n          const cached = await cache.match(event.request);\r\n          return cached || new Response(JSON.stringify({ error: 'Offline y sin caché' }), {\r\n            status: 503,\r\n            headers: { 'Content-Type': 'application/json' }\r\n          });\r\n        }\r\n      })\r\n    );\r\n    return;\r\n  }\r\n\r\n  // 3. Otros recursos → red con fallback\r\n  event.respondWith(\r\n    caches.match(event.request).then(cached =>\r\n      cached ||\r\n      fetch(event.request).catch(err => {\r\n        console.warn('[SW STATIC] Error de red o sin conexión:', err);\r\n\r\n        // Fallback a home si es documento HTML\r\n        if (event.request.destination === 'document') {\r\n          return caches.match('/pages/home.html');\r\n        }\r\n\r\n        return new Response('Recurso no disponible offline', {\r\n          status: 503,\r\n          statusText: 'Offline'\r\n        });\r\n      })\r\n    )\r\n  );\r\n});\r\n"],"names":[],"version":3,"file":"sw-static-cache.js.map","sourceRoot":"/__parcel_source_root/"}